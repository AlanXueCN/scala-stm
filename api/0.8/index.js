Index.PACKAGES = {"scala.concurrent.stm.skel" : [{"name" : "scala.concurrent.stm.skel.AtomicArray", "shortDescription" : "AtomicArray implements a fixed-length indexed sequence where reads and writes have volatile semantics.", "object" : "scala\/concurrent\/stm\/skel\/AtomicArray$.html", "members_class" : [{"label" : "Elements", "tail" : "", "member" : "scala.collection.IndexedSeqLike.Elements", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#ElementsextendsAbstractIterator[A]withBufferedIterator[A]withSerializable", "kind" : "class"}, {"label" : "WithFilter", "tail" : "", "member" : "scala.collection.TraversableLike.WithFilter", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#WithFilterextendsFilterMonadic[A,Repr]", "kind" : "class"}, {"label" : "newBuilder", "tail" : "(): AtomicArrayBuilder[T]", "member" : "scala.concurrent.stm.skel.AtomicArray.newBuilder", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#newBuilder:scala.concurrent.stm.skel.AtomicArrayBuilder[T]", "kind" : "def"}, {"label" : "clone", "tail" : "(): AtomicArray[T]", "member" : "scala.concurrent.stm.skel.AtomicArray.clone", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#clone():scala.concurrent.stm.skel.AtomicArray[T]", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.concurrent.stm.skel.AtomicArray.stringPrefix", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#stringPrefix:String", "kind" : "def"}, {"label" : "getAndTransform", "tail" : "(index: Int)(f: (T) ⇒ T): T", "member" : "scala.concurrent.stm.skel.AtomicArray.getAndTransform", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#getAndTransform(index:Int)(f:T=>T):T", "kind" : "final def"}, {"label" : "toCollection", "tail" : "(repr: AtomicArray[T]): AtomicArray[T]", "member" : "scala.concurrent.stm.skel.AtomicArray.toCollection", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#toCollection(repr:scala.concurrent.stm.skel.AtomicArray[T]):scala.concurrent.stm.skel.AtomicArray[T]", "kind" : "def"}, {"label" : "thisCollection", "tail" : "(): AtomicArray[T]", "member" : "scala.concurrent.stm.skel.AtomicArray.thisCollection", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#thisCollection:scala.concurrent.stm.skel.AtomicArray[T]", "kind" : "def"}, {"member" : "scala.concurrent.stm.skel.AtomicArray#<init>", "error" : "unsupported entity"}, {"label" : "deep", "tail" : "(): collection.IndexedSeq[Any]", "member" : "scala.collection.mutable.ArrayLike.deep", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#deep:IndexedSeq[Any]", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.IndexedSeqOptimized.endsWith", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#endsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B], offset: Int): Boolean", "member" : "scala.collection.IndexedSeqOptimized.startsWith", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#startsWith[B](that:scala.collection.GenSeq[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): collection.Iterator[T]", "member" : "scala.collection.IndexedSeqOptimized.reverseIterator", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "reverse", "tail" : "(): AtomicArray[T]", "member" : "scala.collection.IndexedSeqOptimized.reverse", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#reverse:Repr", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (T) ⇒ Boolean, end: Int): Int", "member" : "scala.collection.IndexedSeqOptimized.lastIndexWhere", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (T) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.IndexedSeqOptimized.indexWhere", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (T) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.IndexedSeqOptimized.segmentLength", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.IndexedSeqOptimized.lengthCompare", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#lengthCompare(len:Int):Int", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.IndexedSeqOptimized.copyToArray", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: GenIterable[B]): Boolean", "member" : "scala.collection.IndexedSeqOptimized.sameElements", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#sameElements[B>:A](that:scala.collection.GenIterable[B]):Boolean", "kind" : "def"}, {"label" : "span", "tail" : "(p: (T) ⇒ Boolean): (AtomicArray[T], AtomicArray[T])", "member" : "scala.collection.IndexedSeqOptimized.span", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#span(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (T) ⇒ Boolean): AtomicArray[T]", "member" : "scala.collection.IndexedSeqOptimized.dropWhile", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#dropWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (T) ⇒ Boolean): AtomicArray[T]", "member" : "scala.collection.IndexedSeqOptimized.takeWhile", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#takeWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (AtomicArray[T], AtomicArray[T])", "member" : "scala.collection.IndexedSeqOptimized.splitAt", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#splitAt(n:Int):(Repr,Repr)", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): AtomicArray[T]", "member" : "scala.collection.IndexedSeqOptimized.dropRight", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#dropRight(n:Int):Repr", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): AtomicArray[T]", "member" : "scala.collection.IndexedSeqOptimized.takeRight", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#takeRight(n:Int):Repr", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): AtomicArray[T]", "member" : "scala.collection.IndexedSeqOptimized.drop", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#drop(n:Int):Repr", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): AtomicArray[T]", "member" : "scala.collection.IndexedSeqOptimized.take", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#take(n:Int):Repr", "kind" : "def"}, {"label" : "init", "tail" : "(): AtomicArray[T]", "member" : "scala.collection.IndexedSeqOptimized.init", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#init:Repr", "kind" : "def"}, {"label" : "last", "tail" : "(): T", "member" : "scala.collection.IndexedSeqOptimized.last", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#last:A", "kind" : "def"}, {"label" : "tail", "tail" : "(): AtomicArray[T]", "member" : "scala.collection.IndexedSeqOptimized.tail", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#tail:Repr", "kind" : "def"}, {"label" : "head", "tail" : "(): T", "member" : "scala.collection.IndexedSeqOptimized.head", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#head:A", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): AtomicArray[T]", "member" : "scala.collection.IndexedSeqOptimized.slice", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#slice(from:Int,until:Int):Repr", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(bf: CanBuildFrom[AtomicArray[T], (A1, Int), That]): That", "member" : "scala.collection.IndexedSeqOptimized.zipWithIndex", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#zipWithIndex[A1>:A,That](implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,Int),That]):That", "kind" : "def"}, {"label" : "zip", "tail" : "(that: GenIterable[B])(bf: CanBuildFrom[AtomicArray[T], (A1, B), That]): That", "member" : "scala.collection.IndexedSeqOptimized.zip", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#zip[A1>:A,B,That](that:scala.collection.GenIterable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (T, B) ⇒ B): B", "member" : "scala.collection.IndexedSeqOptimized.reduceRight", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, T) ⇒ B): B", "member" : "scala.collection.IndexedSeqOptimized.reduceLeft", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (T, B) ⇒ B): B", "member" : "scala.collection.IndexedSeqOptimized.foldRight", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, T) ⇒ B): B", "member" : "scala.collection.IndexedSeqOptimized.foldLeft", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (T) ⇒ Boolean): Option[T]", "member" : "scala.collection.IndexedSeqOptimized.find", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (T) ⇒ Boolean): Boolean", "member" : "scala.collection.IndexedSeqOptimized.exists", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (T) ⇒ Boolean): Boolean", "member" : "scala.collection.IndexedSeqOptimized.forall", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (T) ⇒ U): Unit", "member" : "scala.collection.IndexedSeqOptimized.foreach", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.IndexedSeqOptimized.isEmpty", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "seq", "tail" : "(): collection.mutable.IndexedSeq[T]", "member" : "scala.collection.mutable.IndexedSeq.seq", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#seq:scala.collection.mutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "companion", "tail" : "(): GenericCompanion[collection.mutable.IndexedSeq]", "member" : "scala.collection.mutable.IndexedSeq.companion", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#companion:scala.collection.generic.GenericCompanion[scala.collection.mutable.IndexedSeq]", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): IndexedSeqView[T, AtomicArray[T]]", "member" : "scala.collection.mutable.IndexedSeqLike.view", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#view(from:Int,until:Int):scala.collection.mutable.IndexedSeqView[A,Repr]", "kind" : "def"}, {"label" : "view", "tail" : "(): IndexedSeqView[T, AtomicArray[T]]", "member" : "scala.collection.mutable.IndexedSeqLike.view", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#view:scala.collection.mutable.IndexedSeqView[A,Repr]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.IndexedSeqLike.sizeHintIfCheap", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[A1]", "member" : "scala.collection.IndexedSeqLike.toBuffer", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#toBuffer[A1>:A]:scala.collection.mutable.Buffer[A1]", "kind" : "def"}, {"label" : "iterator", "tail" : "(): collection.Iterator[T]", "member" : "scala.collection.IndexedSeqLike.iterator", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#iterator:Iterator[A]", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.collection.IndexedSeqLike.hashCode", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#hashCode():Int", "kind" : "def"}, {"label" : "transform", "tail" : "(f: (T) ⇒ T): AtomicArray.this.type", "member" : "scala.collection.mutable.SeqLike.transform", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#transform(f:A=>A):SeqLike.this.type", "kind" : "def"}, {"label" : "parCombiner", "tail" : "(): Combiner[T, ParSeq[T]]", "member" : "scala.collection.mutable.SeqLike.parCombiner", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#parCombiner:scala.collection.parallel.Combiner[A,scala.collection.parallel.mutable.ParSeq[A]]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.SeqLike.toString", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#toString():String", "kind" : "def"}, {"label" : "indices", "tail" : "(): collection.immutable.Range", "member" : "scala.collection.SeqLike.indices", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): collection.Seq[T]", "member" : "scala.collection.SeqLike.toSeq", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "sorted", "tail" : "(ord: math.Ordering[B]): AtomicArray[T]", "member" : "scala.collection.SeqLike.sorted", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#sorted[B>:A](implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (T) ⇒ B)(ord: math.Ordering[B]): AtomicArray[T]", "member" : "scala.collection.SeqLike.sortBy", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#sortBy[B](f:A=>B)(implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (T, T) ⇒ Boolean): AtomicArray[T]", "member" : "scala.collection.SeqLike.sortWith", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#sortWith(lt:(A,A)=>Boolean):Repr", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenSeq[B])(p: (T, B) ⇒ Boolean): Boolean", "member" : "scala.collection.SeqLike.corresponds", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#corresponds[B](that:scala.collection.GenSeq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B)(bf: CanBuildFrom[AtomicArray[T], B, That]): That", "member" : "scala.collection.SeqLike.padTo", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#padTo[B>:A,That](len:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : ":+", "tail" : "(elem: B)(bf: CanBuildFrom[AtomicArray[T], B, That]): That", "member" : "scala.collection.SeqLike.:+", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#:+[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "+:", "tail" : "(elem: B)(bf: CanBuildFrom[AtomicArray[T], B, That]): That", "member" : "scala.collection.SeqLike.+:", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#+:[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "updated", "tail" : "(index: Int, elem: B)(bf: CanBuildFrom[AtomicArray[T], B, That]): That", "member" : "scala.collection.SeqLike.updated", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#updated[B>:A,That](index:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patch: GenSeq[B], replaced: Int)(bf: CanBuildFrom[AtomicArray[T], B, That]): That", "member" : "scala.collection.SeqLike.patch", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#patch[B>:A,That](from:Int,patch:scala.collection.GenSeq[B],replaced:Int)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "distinct", "tail" : "(): AtomicArray[T]", "member" : "scala.collection.SeqLike.distinct", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#distinct:Repr", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: GenSeq[B]): AtomicArray[T]", "member" : "scala.collection.SeqLike.intersect", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#intersect[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "diff", "tail" : "(that: GenSeq[B]): AtomicArray[T]", "member" : "scala.collection.SeqLike.diff", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#diff[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "union", "tail" : "(that: GenSeq[B])(bf: CanBuildFrom[AtomicArray[T], B, That]): That", "member" : "scala.collection.SeqLike.union", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#union[B>:A,That](that:scala.collection.GenSeq[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.SeqLike.contains", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.SeqLike.containsSlice", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#containsSlice[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B], end: Int): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B],end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B], from: Int): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B],from:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (T) ⇒ B)(bf: CanBuildFrom[AtomicArray[T], B, That]): That", "member" : "scala.collection.SeqLike.reverseMap", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#reverseMap[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): collection.Iterator[AtomicArray[T]]", "member" : "scala.collection.SeqLike.combinations", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#combinations(n:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): collection.Iterator[AtomicArray[T]]", "member" : "scala.collection.SeqLike.permutations", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#permutations:Iterator[Repr]", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqLike.size", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#size:Int", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "scala.collection.GenSeqLike.equals", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.GenSeqLike.startsWith", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#startsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (T) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.lastIndexWhere", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#lastIndexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (T) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.indexWhere", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (T) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.prefixLength", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#prefixLength(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "isDefinedAt", "tail" : "(idx: Int): Boolean", "member" : "scala.collection.GenSeqLike.isDefinedAt", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#isDefinedAt(idx:Int):Boolean", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (T) ⇒ U): (Int) ⇒ Boolean", "member" : "scala.PartialFunction.runWith", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) ⇒ B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) ⇒ Option[T]", "member" : "scala.PartialFunction.lift", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (T) ⇒ C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) ⇒ Int): (A) ⇒ T", "member" : "scala.Function1.compose", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.IterableLike.canEqual", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "toStream", "tail" : "(): collection.immutable.Stream[T]", "member" : "scala.collection.IterableLike.toStream", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: GenIterable[B], thisElem: A1, thatElem: B)(bf: CanBuildFrom[AtomicArray[T], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zipAll", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#zipAll[B,A1>:A,That](that:scala.collection.GenIterable[B],thisElem:A1,thatElem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): collection.Iterator[AtomicArray[T]]", "member" : "scala.collection.IterableLike.sliding", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#sliding(size:Int,step:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): collection.Iterator[AtomicArray[T]]", "member" : "scala.collection.IterableLike.sliding", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#sliding(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): collection.Iterator[AtomicArray[T]]", "member" : "scala.collection.IterableLike.grouped", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#grouped(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): collection.Iterator[T]", "member" : "scala.collection.IterableLike.toIterator", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): collection.Iterable[T]", "member" : "scala.collection.IterableLike.toIterable", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asTraversable: (T) ⇒ GenTraversableOnce[B]): collection.mutable.IndexedSeq[collection.mutable.IndexedSeq[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.transpose", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#transpose[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asTraversable: (T) ⇒ GenTraversableOnce[B]): collection.mutable.IndexedSeq[B]", "member" : "scala.collection.generic.GenericTraversableTemplate.flatten", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#flatten[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (T) ⇒ (A1, A2, A3)): (collection.mutable.IndexedSeq[A1], collection.mutable.IndexedSeq[A2], collection.mutable.IndexedSeq[A3])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip3", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (T) ⇒ (A1, A2)): (collection.mutable.IndexedSeq[A1], collection.mutable.IndexedSeq[A2])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "genericBuilder", "tail" : "(): Builder[B, collection.mutable.IndexedSeq[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.genericBuilder", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#genericBuilder[B]:scala.collection.mutable.Builder[B,CC[B]]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (T) ⇒ Boolean): FilterMonadic[T, AtomicArray[T]]", "member" : "scala.collection.TraversableLike.withFilter", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#withFilter(p:A=>Boolean):scala.collection.generic.FilterMonadic[A,Repr]", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, T, Col[T]]): Col[T]", "member" : "scala.collection.TraversableLike.to", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): collection.Traversable[T]", "member" : "scala.collection.TraversableLike.toTraversable", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "inits", "tail" : "(): collection.Iterator[AtomicArray[T]]", "member" : "scala.collection.TraversableLike.inits", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#inits:Iterator[Repr]", "kind" : "def"}, {"label" : "tails", "tail" : "(): collection.Iterator[AtomicArray[T]]", "member" : "scala.collection.TraversableLike.tails", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#tails:Iterator[Repr]", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[T]", "member" : "scala.collection.TraversableLike.lastOption", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[T]", "member" : "scala.collection.TraversableLike.headOption", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#headOption:Option[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (T, B) ⇒ B)(bf: CanBuildFrom[AtomicArray[T], B, That]): That", "member" : "scala.collection.TraversableLike.scanRight", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#scanRight[B,That](z:B)(op:(A,B)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, T) ⇒ B)(bf: CanBuildFrom[AtomicArray[T], B, That]): That", "member" : "scala.collection.TraversableLike.scanLeft", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#scanLeft[B,That](z:B)(op:(B,A)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) ⇒ B)(cbf: CanBuildFrom[AtomicArray[T], B, That]): That", "member" : "scala.collection.TraversableLike.scan", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#scan[B>:A,That](z:B)(op:(B,B)=>B)(implicitcbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (T) ⇒ K): Map[K, AtomicArray[T]]", "member" : "scala.collection.TraversableLike.groupBy", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,Repr]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (T) ⇒ Boolean): (AtomicArray[T], AtomicArray[T])", "member" : "scala.collection.TraversableLike.partition", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#partition(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[T, B])(bf: CanBuildFrom[AtomicArray[T], B, That]): That", "member" : "scala.collection.TraversableLike.collect", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#collect[B,That](pf:PartialFunction[A,B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (T) ⇒ Boolean): AtomicArray[T]", "member" : "scala.collection.TraversableLike.filterNot", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#filterNot(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (T) ⇒ Boolean): AtomicArray[T]", "member" : "scala.collection.TraversableLike.filter", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#filter(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (T) ⇒ GenTraversableOnce[B])(bf: CanBuildFrom[AtomicArray[T], B, That]): That", "member" : "scala.collection.TraversableLike.flatMap", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#flatMap[B,That](f:A=>scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "map", "tail" : "(f: (T) ⇒ B)(bf: CanBuildFrom[AtomicArray[T], B, That]): That", "member" : "scala.collection.TraversableLike.map", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#map[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: collection.Traversable[B])(bf: CanBuildFrom[AtomicArray[T], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#++:[B>:A,That](that:Traversable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: collection.TraversableOnce[B])(bf: CanBuildFrom[AtomicArray[T], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#++:[B>:A,That](that:scala.collection.TraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++", "tail" : "(that: GenTraversableOnce[B])(bf: CanBuildFrom[AtomicArray[T], B, That]): That", "member" : "scala.collection.TraversableLike.++", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#++[B>:A,That](that:scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.hasDefiniteSize", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.isTraversableAgain", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#isTraversableAgain:Boolean", "kind" : "final def"}, {"label" : "repr", "tail" : "(): AtomicArray[T]", "member" : "scala.collection.TraversableLike.repr", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#repr:Repr", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "scala.collection.TraversableLike.Self", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#Self=Repr", "kind" : "type"}, {"label" : "par", "tail" : "(): ParSeq[T]", "member" : "scala.collection.Parallelizable.par", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#par:ParRepr", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[T, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#toMap[T,U](implicitev:<:<[A,(T,U)]):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[T]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): collection.immutable.IndexedSeq[T]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[T]", "member" : "scala.collection.TraversableOnce.toList", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#toList:List[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (T) ⇒ B)(cmp: Ordering[B]): T", "member" : "scala.collection.TraversableOnce.minBy", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (T) ⇒ B)(cmp: Ordering[B]): T", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): T", "member" : "scala.collection.TraversableOnce.max", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): T", "member" : "scala.collection.TraversableOnce.min", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, T) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (T, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, T) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (T, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, T) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[T, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (T) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[T]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#reversed:List[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "compareAndSet", "tail" : "(index: Int, expected: T, elem: T): Boolean", "member" : "scala.concurrent.stm.skel.AtomicArray.compareAndSet", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#compareAndSet(index:Int,expected:T,elem:T):Boolean", "kind" : "abstract def"}, {"label" : "swap", "tail" : "(index: Int, elem: T): T", "member" : "scala.concurrent.stm.skel.AtomicArray.swap", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#swap(index:Int,elem:T):T", "kind" : "abstract def"}, {"label" : "update", "tail" : "(index: Int, elem: T): Unit", "member" : "scala.concurrent.stm.skel.AtomicArray.update", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#update(index:Int,elem:T):Unit", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(index: Int): T", "member" : "scala.concurrent.stm.skel.AtomicArray.apply", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#apply(index:Int):T", "kind" : "abstract def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.concurrent.stm.skel.AtomicArray.length", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray.html#length:Int", "kind" : "abstract def"}], "members_object" : [{"label" : "ofRef", "tail" : "", "member" : "scala.concurrent.stm.skel.AtomicArray.ofRef", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray$.html#ofRef[T<:AnyRef]extendsAtomicArray[T]", "kind" : "final class"}, {"label" : "ofUnit", "tail" : "", "member" : "scala.concurrent.stm.skel.AtomicArray.ofUnit", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray$.html#ofUnitextendsAtomicArray[Unit]", "kind" : "final class"}, {"label" : "ofDouble", "tail" : "", "member" : "scala.concurrent.stm.skel.AtomicArray.ofDouble", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray$.html#ofDoubleextendsAtomicArray[Double]", "kind" : "final class"}, {"label" : "ofLong", "tail" : "", "member" : "scala.concurrent.stm.skel.AtomicArray.ofLong", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray$.html#ofLongextendsAtomicArray[Long]", "kind" : "final class"}, {"label" : "ofFloat", "tail" : "", "member" : "scala.concurrent.stm.skel.AtomicArray.ofFloat", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray$.html#ofFloatextendsAtomicArray[Float]", "kind" : "final class"}, {"label" : "ofInt", "tail" : "", "member" : "scala.concurrent.stm.skel.AtomicArray.ofInt", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray$.html#ofIntextendsAtomicArray[Int]", "kind" : "final class"}, {"label" : "ofChar", "tail" : "", "member" : "scala.concurrent.stm.skel.AtomicArray.ofChar", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray$.html#ofCharextendsAtomicArray[Char]", "kind" : "final class"}, {"label" : "ofShort", "tail" : "", "member" : "scala.concurrent.stm.skel.AtomicArray.ofShort", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray$.html#ofShortextendsAtomicArray[Short]", "kind" : "final class"}, {"label" : "ofByte", "tail" : "", "member" : "scala.concurrent.stm.skel.AtomicArray.ofByte", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray$.html#ofByteextendsAtomicArray[Byte]", "kind" : "final class"}, {"label" : "ofBoolean", "tail" : "", "member" : "scala.concurrent.stm.skel.AtomicArray.ofBoolean", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray$.html#ofBooleanextendsAtomicArray[Boolean]", "kind" : "final class"}, {"label" : "canBuildFrom", "tail" : "(m: ClassManifest[T]): CanBuildFrom[AtomicArray[_], T, AtomicArray[T]]", "member" : "scala.concurrent.stm.skel.AtomicArray.canBuildFrom", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray$.html#canBuildFrom[T](implicitm:ClassManifest[T]):scala.collection.generic.CanBuildFrom[scala.concurrent.stm.skel.AtomicArray[_],T,scala.concurrent.stm.skel.AtomicArray[T]]", "kind" : "implicit def"}, {"label" : "apply", "tail" : "(elems: TraversableOnce[T])(m: ClassManifest[T]): AtomicArray[T]", "member" : "scala.concurrent.stm.skel.AtomicArray.apply", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray$.html#apply[T](elems:TraversableOnce[T])(implicitm:ClassManifest[T]):scala.concurrent.stm.skel.AtomicArray[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(elems: Array[T]): ofRef[T]", "member" : "scala.concurrent.stm.skel.AtomicArray.apply", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray$.html#apply[T<:AnyRef](elems:Array[T]):scala.concurrent.stm.skel.AtomicArray.ofRef[T]", "kind" : "def"}, {"label" : "apply", "tail" : "(elems: Array[Unit]): ofUnit", "member" : "scala.concurrent.stm.skel.AtomicArray.apply", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray$.html#apply(elems:Array[Unit]):scala.concurrent.stm.skel.AtomicArray.ofUnit", "kind" : "def"}, {"label" : "apply", "tail" : "(elems: Array[Double]): ofDouble", "member" : "scala.concurrent.stm.skel.AtomicArray.apply", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray$.html#apply(elems:Array[Double]):scala.concurrent.stm.skel.AtomicArray.ofDouble", "kind" : "def"}, {"label" : "apply", "tail" : "(elems: Array[Long]): ofLong", "member" : "scala.concurrent.stm.skel.AtomicArray.apply", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray$.html#apply(elems:Array[Long]):scala.concurrent.stm.skel.AtomicArray.ofLong", "kind" : "def"}, {"label" : "apply", "tail" : "(elems: Array[Float]): ofFloat", "member" : "scala.concurrent.stm.skel.AtomicArray.apply", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray$.html#apply(elems:Array[Float]):scala.concurrent.stm.skel.AtomicArray.ofFloat", "kind" : "def"}, {"label" : "apply", "tail" : "(elems: Array[Int]): ofInt", "member" : "scala.concurrent.stm.skel.AtomicArray.apply", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray$.html#apply(elems:Array[Int]):scala.concurrent.stm.skel.AtomicArray.ofInt", "kind" : "def"}, {"label" : "apply", "tail" : "(elems: Array[Char]): ofChar", "member" : "scala.concurrent.stm.skel.AtomicArray.apply", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray$.html#apply(elems:Array[Char]):scala.concurrent.stm.skel.AtomicArray.ofChar", "kind" : "def"}, {"label" : "apply", "tail" : "(elems: Array[Short]): ofShort", "member" : "scala.concurrent.stm.skel.AtomicArray.apply", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray$.html#apply(elems:Array[Short]):scala.concurrent.stm.skel.AtomicArray.ofShort", "kind" : "def"}, {"label" : "apply", "tail" : "(elems: Array[Byte]): ofByte", "member" : "scala.concurrent.stm.skel.AtomicArray.apply", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray$.html#apply(elems:Array[Byte]):scala.concurrent.stm.skel.AtomicArray.ofByte", "kind" : "def"}, {"label" : "apply", "tail" : "(elems: Array[Boolean]): ofBoolean", "member" : "scala.concurrent.stm.skel.AtomicArray.apply", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray$.html#apply(elems:Array[Boolean]):scala.concurrent.stm.skel.AtomicArray.ofBoolean", "kind" : "def"}, {"label" : "apply", "tail" : "(size: Int)(m: ClassManifest[T]): AtomicArray[T]", "member" : "scala.concurrent.stm.skel.AtomicArray.apply", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray$.html#apply[T](size:Int)(implicitm:ClassManifest[T]):scala.concurrent.stm.skel.AtomicArray[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/skel\/AtomicArray$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/concurrent\/stm\/skel\/AtomicArray.html", "kind" : "class"}, {"name" : "scala.concurrent.stm.skel.AtomicArrayBuilder", "members_trait" : [{"label" : "mapResult", "tail" : "(f: (AtomicArray[A]) ⇒ NewTo): Builder[A, NewTo]", "member" : "scala.collection.mutable.Builder.mapResult", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder.html#mapResult[NewTo](f:To=>NewTo):scala.collection.mutable.Builder[Elem,NewTo]", "kind" : "def"}, {"label" : "sizeHintBounded", "tail" : "(size: Int, boundingColl: TraversableLike[_, _]): Unit", "member" : "scala.collection.mutable.Builder.sizeHintBounded", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder.html#sizeHintBounded(size:Int,boundingColl:scala.collection.TraversableLike[_,_]):Unit", "kind" : "def"}, {"label" : "sizeHint", "tail" : "(coll: TraversableLike[_, _], delta: Int): Unit", "member" : "scala.collection.mutable.Builder.sizeHint", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder.html#sizeHint(coll:scala.collection.TraversableLike[_,_],delta:Int):Unit", "kind" : "def"}, {"label" : "sizeHint", "tail" : "(coll: TraversableLike[_, _]): Unit", "member" : "scala.collection.mutable.Builder.sizeHint", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder.html#sizeHint(coll:scala.collection.TraversableLike[_,_]):Unit", "kind" : "def"}, {"label" : "sizeHint", "tail" : "(size: Int): Unit", "member" : "scala.collection.mutable.Builder.sizeHint", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder.html#sizeHint(size:Int):Unit", "kind" : "def"}, {"label" : "++=", "tail" : "(xs: collection.TraversableOnce[A]): AtomicArrayBuilder.this.type", "member" : "scala.collection.generic.Growable.++=", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder.html#++=(xs:scala.collection.TraversableOnce[A]):Growable.this.type", "kind" : "def"}, {"label" : "+=", "tail" : "(elem1: A, elem2: A, elems: A*): AtomicArrayBuilder.this.type", "member" : "scala.collection.generic.Growable.+=", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder.html#+=(elem1:A,elem2:A,elems:A*):Growable.this.type", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "result", "tail" : "(): AtomicArray[A]", "member" : "scala.collection.mutable.Builder.result", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder.html#result():To", "kind" : "abstract def"}, {"label" : "clear", "tail" : "(): Unit", "member" : "scala.collection.mutable.Builder.clear", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder.html#clear():Unit", "kind" : "abstract def"}, {"label" : "+=", "tail" : "(elem: A): AtomicArrayBuilder.this.type", "member" : "scala.collection.mutable.Builder.+=", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder.html#+=(elem:Elem):Builder.this.type", "kind" : "abstract def"}], "shortDescription" : "", "object" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder$.html", "members_object" : [{"label" : "ofRef", "tail" : "", "member" : "scala.concurrent.stm.skel.AtomicArrayBuilder.ofRef", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder$.html#ofRef[T<:AnyRef]extendsAtomicArrayBuilder[T]", "kind" : "class"}, {"label" : "ofUnit", "tail" : "", "member" : "scala.concurrent.stm.skel.AtomicArrayBuilder.ofUnit", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder$.html#ofUnitextendsAtomicArrayBuilder[Unit]", "kind" : "class"}, {"label" : "ofDouble", "tail" : "", "member" : "scala.concurrent.stm.skel.AtomicArrayBuilder.ofDouble", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder$.html#ofDoubleextendsAtomicArrayBuilder.LongBacked[Double]", "kind" : "class"}, {"label" : "ofLong", "tail" : "", "member" : "scala.concurrent.stm.skel.AtomicArrayBuilder.ofLong", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder$.html#ofLongextendsAtomicArrayBuilder.LongBacked[Long]", "kind" : "class"}, {"label" : "ofFloat", "tail" : "", "member" : "scala.concurrent.stm.skel.AtomicArrayBuilder.ofFloat", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder$.html#ofFloatextendsAtomicArrayBuilder.IntBacked[Float]", "kind" : "class"}, {"label" : "ofInt", "tail" : "", "member" : "scala.concurrent.stm.skel.AtomicArrayBuilder.ofInt", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder$.html#ofIntextendsAtomicArrayBuilder.IntBacked[Int]", "kind" : "class"}, {"label" : "ofChar", "tail" : "", "member" : "scala.concurrent.stm.skel.AtomicArrayBuilder.ofChar", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder$.html#ofCharextendsAtomicArrayBuilder.IntBacked[Char]", "kind" : "class"}, {"label" : "ofShort", "tail" : "", "member" : "scala.concurrent.stm.skel.AtomicArrayBuilder.ofShort", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder$.html#ofShortextendsAtomicArrayBuilder.IntBacked[Short]", "kind" : "class"}, {"label" : "ofByte", "tail" : "", "member" : "scala.concurrent.stm.skel.AtomicArrayBuilder.ofByte", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder$.html#ofByteextendsAtomicArrayBuilder.IntBacked[Byte]", "kind" : "class"}, {"label" : "ofBoolean", "tail" : "", "member" : "scala.concurrent.stm.skel.AtomicArrayBuilder.ofBoolean", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder$.html#ofBooleanextendsAtomicArrayBuilder.IntBacked[Boolean]", "kind" : "class"}, {"label" : "LongBacked", "tail" : "", "member" : "scala.concurrent.stm.skel.AtomicArrayBuilder.LongBacked", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder$.html#LongBacked[T]extendsAtomicArrayBuilder[T]", "kind" : "abstract class"}, {"label" : "IntBacked", "tail" : "", "member" : "scala.concurrent.stm.skel.AtomicArrayBuilder.IntBacked", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder$.html#IntBacked[T]extendsAtomicArrayBuilder[T]", "kind" : "abstract class"}, {"label" : "of", "tail" : "(m: ClassManifest[T]): Builder[T, AtomicArray[T]]", "member" : "scala.concurrent.stm.skel.AtomicArrayBuilder.of", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder$.html#of[T](m:ClassManifest[T]):scala.collection.mutable.Builder[T,scala.concurrent.stm.skel.AtomicArray[T]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scala\/concurrent\/stm\/skel\/AtomicArrayBuilder.html", "kind" : "trait"}, {"name" : "scala.concurrent.stm.skel.SimpleRandom", "shortDescription" : "A random number generator that focuses on speed and lack of inter-thread interference, rather than on the quality of the numbers returned.", "object" : "scala\/concurrent\/stm\/skel\/SimpleRandom$.html", "members_class" : [{"label" : "nextInt", "tail" : "(n: Int): Int", "member" : "scala.concurrent.stm.skel.SimpleRandom.nextInt", "link" : "scala\/concurrent\/stm\/skel\/SimpleRandom.html#nextInt(n:Int):Int", "kind" : "def"}, {"label" : "nextInt", "tail" : "(): Int", "member" : "scala.concurrent.stm.skel.SimpleRandom.nextInt", "link" : "scala\/concurrent\/stm\/skel\/SimpleRandom.html#nextInt():Int", "kind" : "def"}, {"label" : "clone", "tail" : "(): SimpleRandom", "member" : "scala.concurrent.stm.skel.SimpleRandom.clone", "link" : "scala\/concurrent\/stm\/skel\/SimpleRandom.html#clone():scala.concurrent.stm.skel.SimpleRandom", "kind" : "def"}, {"member" : "scala.concurrent.stm.skel.SimpleRandom#<init>", "error" : "unsupported entity"}, {"member" : "scala.concurrent.stm.skel.SimpleRandom#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/skel\/SimpleRandom.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/skel\/SimpleRandom.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/skel\/SimpleRandom.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/skel\/SimpleRandom.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/skel\/SimpleRandom.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/skel\/SimpleRandom.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/skel\/SimpleRandom.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/skel\/SimpleRandom.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/skel\/SimpleRandom.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/skel\/SimpleRandom.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/skel\/SimpleRandom.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/skel\/SimpleRandom.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/skel\/SimpleRandom.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/skel\/SimpleRandom.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/skel\/SimpleRandom.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/skel\/SimpleRandom.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/skel\/SimpleRandom.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/skel\/SimpleRandom.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "nextInt", "tail" : "(n: Int): Int", "member" : "scala.concurrent.stm.skel.SimpleRandom.nextInt", "link" : "scala\/concurrent\/stm\/skel\/SimpleRandom$.html#nextInt(n:Int):Int", "kind" : "def"}, {"label" : "nextInt", "tail" : "(): Int", "member" : "scala.concurrent.stm.skel.SimpleRandom.nextInt", "link" : "scala\/concurrent\/stm\/skel\/SimpleRandom$.html#nextInt():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/skel\/SimpleRandom$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/skel\/SimpleRandom$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/skel\/SimpleRandom$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/skel\/SimpleRandom$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/skel\/SimpleRandom$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/skel\/SimpleRandom$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/skel\/SimpleRandom$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/skel\/SimpleRandom$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/skel\/SimpleRandom$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/skel\/SimpleRandom$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/skel\/SimpleRandom$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/skel\/SimpleRandom$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/skel\/SimpleRandom$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/skel\/SimpleRandom$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/skel\/SimpleRandom$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/skel\/SimpleRandom$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/skel\/SimpleRandom$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/skel\/SimpleRandom$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/skel\/SimpleRandom$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/concurrent\/stm\/skel\/SimpleRandom.html", "kind" : "object"}, {"name" : "scala.concurrent.stm.skel.StubInTxn", "shortDescription" : "", "members_class" : [{"label" : "setExternalDecider", "tail" : "(decider: ExternalDecider): Nothing", "member" : "scala.concurrent.stm.skel.StubInTxn.setExternalDecider", "link" : "scala\/concurrent\/stm\/skel\/StubInTxn.html#setExternalDecider(decider:concurrent.stm.Txn.ExternalDecider):Nothing", "kind" : "def"}, {"label" : "afterCompletion", "tail" : "(handler: (Status) ⇒ Unit): Nothing", "member" : "scala.concurrent.stm.skel.StubInTxn.afterCompletion", "link" : "scala\/concurrent\/stm\/skel\/StubInTxn.html#afterCompletion(handler:concurrent.stm.Txn.Status=>Unit):Nothing", "kind" : "def"}, {"label" : "afterRollback", "tail" : "(handler: (Status) ⇒ Unit): Nothing", "member" : "scala.concurrent.stm.skel.StubInTxn.afterRollback", "link" : "scala\/concurrent\/stm\/skel\/StubInTxn.html#afterRollback(handler:concurrent.stm.Txn.Status=>Unit):Nothing", "kind" : "def"}, {"label" : "afterCommit", "tail" : "(handler: (Status) ⇒ Unit): Nothing", "member" : "scala.concurrent.stm.skel.StubInTxn.afterCommit", "link" : "scala\/concurrent\/stm\/skel\/StubInTxn.html#afterCommit(handler:concurrent.stm.Txn.Status=>Unit):Nothing", "kind" : "def"}, {"label" : "whileCommitting", "tail" : "(handler: (InTxnEnd) ⇒ Unit): Nothing", "member" : "scala.concurrent.stm.skel.StubInTxn.whileCommitting", "link" : "scala\/concurrent\/stm\/skel\/StubInTxn.html#whileCommitting(handler:scala.concurrent.stm.InTxnEnd=>Unit):Nothing", "kind" : "def"}, {"label" : "whilePreparing", "tail" : "(handler: (InTxnEnd) ⇒ Unit): Nothing", "member" : "scala.concurrent.stm.skel.StubInTxn.whilePreparing", "link" : "scala\/concurrent\/stm\/skel\/StubInTxn.html#whilePreparing(handler:scala.concurrent.stm.InTxnEnd=>Unit):Nothing", "kind" : "def"}, {"label" : "beforeCommit", "tail" : "(handler: (InTxn) ⇒ Unit): Nothing", "member" : "scala.concurrent.stm.skel.StubInTxn.beforeCommit", "link" : "scala\/concurrent\/stm\/skel\/StubInTxn.html#beforeCommit(handler:scala.concurrent.stm.InTxn=>Unit):Nothing", "kind" : "def"}, {"label" : "retryFor", "tail" : "(timeoutNanos: Long): Unit", "member" : "scala.concurrent.stm.skel.StubInTxn.retryFor", "link" : "scala\/concurrent\/stm\/skel\/StubInTxn.html#retryFor(timeoutNanos:Long):Unit", "kind" : "def"}, {"label" : "retry", "tail" : "(): Nothing", "member" : "scala.concurrent.stm.skel.StubInTxn.retry", "link" : "scala\/concurrent\/stm\/skel\/StubInTxn.html#retry():Nothing", "kind" : "def"}, {"label" : "rollback", "tail" : "(cause: RollbackCause): Nothing", "member" : "scala.concurrent.stm.skel.StubInTxn.rollback", "link" : "scala\/concurrent\/stm\/skel\/StubInTxn.html#rollback(cause:concurrent.stm.Txn.RollbackCause):Nothing", "kind" : "def"}, {"label" : "currentLevel", "tail" : "(): NestingLevel", "member" : "scala.concurrent.stm.skel.StubInTxn.currentLevel", "link" : "scala\/concurrent\/stm\/skel\/StubInTxn.html#currentLevel:scala.concurrent.stm.NestingLevel", "kind" : "def"}, {"label" : "rootLevel", "tail" : "(): NestingLevel", "member" : "scala.concurrent.stm.skel.StubInTxn.rootLevel", "link" : "scala\/concurrent\/stm\/skel\/StubInTxn.html#rootLevel:scala.concurrent.stm.NestingLevel", "kind" : "def"}, {"label" : "status", "tail" : "(): Status", "member" : "scala.concurrent.stm.skel.StubInTxn.status", "link" : "scala\/concurrent\/stm\/skel\/StubInTxn.html#status:concurrent.stm.Txn.Status", "kind" : "def"}, {"label" : "executor", "tail" : "(): TxnExecutor", "member" : "scala.concurrent.stm.skel.StubInTxn.executor", "link" : "scala\/concurrent\/stm\/skel\/StubInTxn.html#executor:scala.concurrent.stm.TxnExecutor", "kind" : "def"}, {"member" : "scala.concurrent.stm.skel.StubInTxn#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/skel\/StubInTxn.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/skel\/StubInTxn.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/skel\/StubInTxn.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/skel\/StubInTxn.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/skel\/StubInTxn.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/skel\/StubInTxn.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/skel\/StubInTxn.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/skel\/StubInTxn.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/skel\/StubInTxn.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/skel\/StubInTxn.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/skel\/StubInTxn.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/skel\/StubInTxn.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/skel\/StubInTxn.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/skel\/StubInTxn.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/skel\/StubInTxn.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/skel\/StubInTxn.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/skel\/StubInTxn.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/skel\/StubInTxn.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/skel\/StubInTxn.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/concurrent\/stm\/skel\/StubInTxn.html", "kind" : "class"}, {"name" : "scala.concurrent.stm.skel.StubSTMImpl", "shortDescription" : "", "members_class" : [{"label" : "newCommitBarrier", "tail" : "(timeout: Long, unit: TimeUnit): CommitBarrier", "member" : "scala.concurrent.stm.skel.StubSTMImpl.newCommitBarrier", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#newCommitBarrier(timeout:Long,unit:java.util.concurrent.TimeUnit):scala.concurrent.stm.CommitBarrier", "kind" : "def"}, {"label" : "withPostDecisionFailureHandler", "tail" : "(handler: (Status, java.lang.Throwable) ⇒ Unit): TxnExecutor", "member" : "scala.concurrent.stm.skel.StubSTMImpl.withPostDecisionFailureHandler", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#withPostDecisionFailureHandler(handler:(scala.concurrent.stm.Txn.Status,Throwable)=>Unit):scala.concurrent.stm.TxnExecutor", "kind" : "def"}, {"label" : "postDecisionFailureHandler", "tail" : "(): (Status, java.lang.Throwable) ⇒ Unit", "member" : "scala.concurrent.stm.skel.StubSTMImpl.postDecisionFailureHandler", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#postDecisionFailureHandler:(scala.concurrent.stm.Txn.Status,Throwable)=>Unit", "kind" : "def"}, {"label" : "withControlFlowRecognizer", "tail" : "(pf: PartialFunction[java.lang.Throwable, Boolean]): TxnExecutor", "member" : "scala.concurrent.stm.skel.StubSTMImpl.withControlFlowRecognizer", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#withControlFlowRecognizer(pf:PartialFunction[Throwable,Boolean]):scala.concurrent.stm.TxnExecutor", "kind" : "def"}, {"label" : "isControlFlow", "tail" : "(x: java.lang.Throwable): Boolean", "member" : "scala.concurrent.stm.skel.StubSTMImpl.isControlFlow", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#isControlFlow(x:Throwable):Boolean", "kind" : "def"}, {"label" : "withRetryTimeoutNanos", "tail" : "(timeout: Option[Long]): TxnExecutor", "member" : "scala.concurrent.stm.skel.StubSTMImpl.withRetryTimeoutNanos", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#withRetryTimeoutNanos(timeout:Option[Long]):scala.concurrent.stm.TxnExecutor", "kind" : "def"}, {"label" : "retryTimeoutNanos", "tail" : "(): Option[Long]", "member" : "scala.concurrent.stm.skel.StubSTMImpl.retryTimeoutNanos", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#retryTimeoutNanos:Option[Long]", "kind" : "def"}, {"label" : "compareAndSetIdentity", "tail" : "(a: Ref[A], a0: A, a1: A, b: Ref[B], b0: B, b1: B): Boolean", "member" : "scala.concurrent.stm.skel.StubSTMImpl.compareAndSetIdentity", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#compareAndSetIdentity[A<:AnyRef,B<:AnyRef](a:scala.concurrent.stm.Ref[A],a0:A,a1:A,b:scala.concurrent.stm.Ref[B],b0:B,b1:B):Boolean", "kind" : "def"}, {"label" : "compareAndSet", "tail" : "(a: Ref[A], a0: A, a1: A, b: Ref[B], b0: B, b1: B): Boolean", "member" : "scala.concurrent.stm.skel.StubSTMImpl.compareAndSet", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#compareAndSet[A,B](a:scala.concurrent.stm.Ref[A],a0:A,a1:A,b:scala.concurrent.stm.Ref[B],b0:B,b1:B):Boolean", "kind" : "def"}, {"label" : "pushAlternative", "tail" : "(mt: MaybeTxn, block: (InTxn) ⇒ Z): Boolean", "member" : "scala.concurrent.stm.skel.StubSTMImpl.pushAlternative", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#pushAlternative[Z](mt:scala.concurrent.stm.MaybeTxn,block:scala.concurrent.stm.InTxn=>Z):Boolean", "kind" : "def"}, {"label" : "unrecorded", "tail" : "(block: (InTxn) ⇒ Z, outerFailure: (RollbackCause) ⇒ Z)(mt: MaybeTxn): Z", "member" : "scala.concurrent.stm.skel.StubSTMImpl.unrecorded", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#unrecorded[Z](block:scala.concurrent.stm.InTxn=>Z,outerFailure:scala.concurrent.stm.Txn.RollbackCause=>Z)(implicitmt:scala.concurrent.stm.MaybeTxn):Z", "kind" : "def"}, {"label" : "oneOf", "tail" : "(blocks: (InTxn) ⇒ Z*)(mt: MaybeTxn): Z", "member" : "scala.concurrent.stm.skel.StubSTMImpl.oneOf", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#oneOf[Z](blocks:scala.concurrent.stm.InTxn=>Z*)(implicitmt:scala.concurrent.stm.MaybeTxn):Z", "kind" : "def"}, {"label" : "apply", "tail" : "(block: (InTxn) ⇒ Z)(mt: MaybeTxn): Z", "member" : "scala.concurrent.stm.skel.StubSTMImpl.apply", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#apply[Z](block:scala.concurrent.stm.InTxn=>Z)(implicitmt:scala.concurrent.stm.MaybeTxn):Z", "kind" : "def"}, {"label" : "dynCurrentOrNull", "tail" : "(): InTxn", "member" : "scala.concurrent.stm.skel.StubSTMImpl.dynCurrentOrNull", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#dynCurrentOrNull:scala.concurrent.stm.InTxn", "kind" : "def"}, {"label" : "findCurrent", "tail" : "(mt: MaybeTxn): Option[InTxn]", "member" : "scala.concurrent.stm.skel.StubSTMImpl.findCurrent", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#findCurrent(implicitmt:scala.concurrent.stm.MaybeTxn):Option[scala.concurrent.stm.InTxn]", "kind" : "def"}, {"label" : "newTSetBuilder", "tail" : "(): Builder[A, TSet[A]]", "member" : "scala.concurrent.stm.skel.StubSTMImpl.newTSetBuilder", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#newTSetBuilder[A]:scala.collection.mutable.Builder[A,scala.concurrent.stm.TSet[A]]", "kind" : "def"}, {"label" : "newTSet", "tail" : "(): TSet[A]", "member" : "scala.concurrent.stm.skel.StubSTMImpl.newTSet", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#newTSet[A]:scala.concurrent.stm.TSet[A]", "kind" : "def"}, {"label" : "newTMapBuilder", "tail" : "(): Builder[(A, B), TMap[A, B]]", "member" : "scala.concurrent.stm.skel.StubSTMImpl.newTMapBuilder", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#newTMapBuilder[A,B]:scala.collection.mutable.Builder[(A,B),scala.concurrent.stm.TMap[A,B]]", "kind" : "def"}, {"label" : "newTMap", "tail" : "(): TMap[A, B]", "member" : "scala.concurrent.stm.skel.StubSTMImpl.newTMap", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#newTMap[A,B]:scala.concurrent.stm.TMap[A,B]", "kind" : "def"}, {"label" : "newTArray", "tail" : "(xs: TraversableOnce[A])(arg0: ClassManifest[A]): TArray[A]", "member" : "scala.concurrent.stm.skel.StubSTMImpl.newTArray", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#newTArray[A](xs:TraversableOnce[A])(implicitevidence$3:ClassManifest[A]):scala.concurrent.stm.TArray[A]", "kind" : "def"}, {"label" : "newTArray", "tail" : "(length: Int)(arg0: ClassManifest[A]): TArray[A]", "member" : "scala.concurrent.stm.skel.StubSTMImpl.newTArray", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#newTArray[A](length:Int)(implicitevidence$2:ClassManifest[A]):scala.concurrent.stm.TArray[A]", "kind" : "def"}, {"label" : "newTxnLocal", "tail" : "(init: ⇒ A, initialValue: (InTxn) ⇒ A, beforeCommit: (InTxn) ⇒ Unit, whilePreparing: (InTxnEnd) ⇒ Unit, whileCommitting: (InTxnEnd) ⇒ Unit, afterCommit: (A) ⇒ Unit, afterRollback: (Status) ⇒ Unit, afterCompletion: (Status) ⇒ Unit): TxnLocal[A]", "member" : "scala.concurrent.stm.skel.StubSTMImpl.newTxnLocal", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#newTxnLocal[A](init:=>A,initialValue:scala.concurrent.stm.InTxn=>A,beforeCommit:scala.concurrent.stm.InTxn=>Unit,whilePreparing:scala.concurrent.stm.InTxnEnd=>Unit,whileCommitting:scala.concurrent.stm.InTxnEnd=>Unit,afterCommit:A=>Unit,afterRollback:scala.concurrent.stm.Txn.Status=>Unit,afterCompletion:scala.concurrent.stm.Txn.Status=>Unit):scala.concurrent.stm.TxnLocal[A]", "kind" : "def"}, {"label" : "newRef", "tail" : "(v0: A)(arg0: ClassManifest[A]): Ref[A]", "member" : "scala.concurrent.stm.skel.StubSTMImpl.newRef", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#newRef[A](v0:A)(implicitevidence$1:ClassManifest[A]):scala.concurrent.stm.Ref[A]", "kind" : "def"}, {"label" : "newRef", "tail" : "(v0: Unit): Ref[Unit]", "member" : "scala.concurrent.stm.skel.StubSTMImpl.newRef", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#newRef(v0:Unit):scala.concurrent.stm.Ref[Unit]", "kind" : "def"}, {"label" : "newRef", "tail" : "(v0: Double): Ref[Double]", "member" : "scala.concurrent.stm.skel.StubSTMImpl.newRef", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#newRef(v0:Double):scala.concurrent.stm.Ref[Double]", "kind" : "def"}, {"label" : "newRef", "tail" : "(v0: Long): Ref[Long]", "member" : "scala.concurrent.stm.skel.StubSTMImpl.newRef", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#newRef(v0:Long):scala.concurrent.stm.Ref[Long]", "kind" : "def"}, {"label" : "newRef", "tail" : "(v0: Float): Ref[Float]", "member" : "scala.concurrent.stm.skel.StubSTMImpl.newRef", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#newRef(v0:Float):scala.concurrent.stm.Ref[Float]", "kind" : "def"}, {"label" : "newRef", "tail" : "(v0: Int): Ref[Int]", "member" : "scala.concurrent.stm.skel.StubSTMImpl.newRef", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#newRef(v0:Int):scala.concurrent.stm.Ref[Int]", "kind" : "def"}, {"label" : "newRef", "tail" : "(v0: Char): Ref[Char]", "member" : "scala.concurrent.stm.skel.StubSTMImpl.newRef", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#newRef(v0:Char):scala.concurrent.stm.Ref[Char]", "kind" : "def"}, {"label" : "newRef", "tail" : "(v0: Short): Ref[Short]", "member" : "scala.concurrent.stm.skel.StubSTMImpl.newRef", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#newRef(v0:Short):scala.concurrent.stm.Ref[Short]", "kind" : "def"}, {"label" : "newRef", "tail" : "(v0: Byte): Ref[Byte]", "member" : "scala.concurrent.stm.skel.StubSTMImpl.newRef", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#newRef(v0:Byte):scala.concurrent.stm.Ref[Byte]", "kind" : "def"}, {"label" : "newRef", "tail" : "(v0: Boolean): Ref[Boolean]", "member" : "scala.concurrent.stm.skel.StubSTMImpl.newRef", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#newRef(v0:Boolean):scala.concurrent.stm.Ref[Boolean]", "kind" : "def"}, {"member" : "scala.concurrent.stm.skel.StubSTMImpl#<init>", "error" : "unsupported entity"}, {"label" : "withRetryTimeout", "tail" : "(timeout: Long, unit: TimeUnit): TxnExecutor", "member" : "scala.concurrent.stm.TxnExecutor.withRetryTimeout", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#withRetryTimeout(timeout:Long,unit:java.util.concurrent.TimeUnit):scala.concurrent.stm.TxnExecutor", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/concurrent\/stm\/skel\/StubSTMImpl.html", "kind" : "class"}], "scala.concurrent.stm" : [{"name" : "scala.concurrent.stm.CommitBarrier", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/CommitBarrier.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/CommitBarrier.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/CommitBarrier.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/CommitBarrier.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/CommitBarrier.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/CommitBarrier.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/CommitBarrier.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/CommitBarrier.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/CommitBarrier.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/CommitBarrier.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/CommitBarrier.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/CommitBarrier.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/CommitBarrier.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/CommitBarrier.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/CommitBarrier.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/CommitBarrier.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/CommitBarrier.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/CommitBarrier.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/CommitBarrier.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "addMember", "tail" : "(cancelOnLocalRollback: Boolean)(txn: MaybeTxn): Member", "member" : "scala.concurrent.stm.CommitBarrier.addMember", "link" : "scala\/concurrent\/stm\/CommitBarrier.html#addMember(cancelOnLocalRollback:Boolean)(implicittxn:scala.concurrent.stm.MaybeTxn):scala.concurrent.stm.CommitBarrier.Member", "kind" : "abstract def"}], "shortDescription" : "", "object" : "scala\/concurrent\/stm\/CommitBarrier$.html", "members_object" : [{"label" : "apply", "tail" : "(timeout: Long, unit: TimeUnit): CommitBarrier", "member" : "scala.concurrent.stm.CommitBarrier.apply", "link" : "scala\/concurrent\/stm\/CommitBarrier$.html#apply(timeout:Long,unit:java.util.concurrent.TimeUnit):scala.concurrent.stm.CommitBarrier", "kind" : "def"}, {"label" : "Member", "tail" : "", "member" : "scala.concurrent.stm.CommitBarrier.Member", "link" : "scala\/concurrent\/stm\/CommitBarrier$.html#MemberextendsAnyRef", "kind" : "trait"}, {"label" : "UserCancel", "tail" : "", "member" : "scala.concurrent.stm.CommitBarrier.UserCancel", "link" : "scala\/concurrent\/stm\/CommitBarrier$.html#UserCancelextendsCommitBarrier.CancelCausewithProductwithSerializable", "kind" : "case class"}, {"label" : "MemberUncaughtExceptionCause", "tail" : "", "member" : "scala.concurrent.stm.CommitBarrier.MemberUncaughtExceptionCause", "link" : "scala\/concurrent\/stm\/CommitBarrier$.html#MemberUncaughtExceptionCauseextendsCommitBarrier.CancelCausewithProductwithSerializable", "kind" : "case class"}, {"label" : "MemberCycle", "tail" : "", "member" : "scala.concurrent.stm.CommitBarrier.MemberCycle", "link" : "scala\/concurrent\/stm\/CommitBarrier$.html#MemberCycleextendsCommitBarrier.CancelCausewithProductwithSerializable", "kind" : "case class"}, {"label" : "Timeout", "tail" : "", "member" : "scala.concurrent.stm.CommitBarrier.Timeout", "link" : "scala\/concurrent\/stm\/CommitBarrier$.html#Timeout", "kind" : "object"}, {"label" : "CreatingTxnRolledBack", "tail" : "", "member" : "scala.concurrent.stm.CommitBarrier.CreatingTxnRolledBack", "link" : "scala\/concurrent\/stm\/CommitBarrier$.html#CreatingTxnRolledBack", "kind" : "object"}, {"label" : "CancelCause", "tail" : "", "member" : "scala.concurrent.stm.CommitBarrier.CancelCause", "link" : "scala\/concurrent\/stm\/CommitBarrier$.html#CancelCauseextendsAnyRef", "kind" : "sealed abstract class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/CommitBarrier$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/CommitBarrier$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/CommitBarrier$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/CommitBarrier$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/CommitBarrier$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/CommitBarrier$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/CommitBarrier$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/CommitBarrier$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/CommitBarrier$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/CommitBarrier$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/CommitBarrier$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/CommitBarrier$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/CommitBarrier$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/CommitBarrier$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/CommitBarrier$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/CommitBarrier$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/CommitBarrier$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/CommitBarrier$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/CommitBarrier$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scala\/concurrent\/stm\/CommitBarrier.html", "kind" : "object"}, {"name" : "scala.concurrent.stm.InTxn", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/InTxn.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/InTxn.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/InTxn.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/InTxn.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/InTxn.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/InTxn.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/InTxn.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/InTxn.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/InTxn.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/InTxn.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/InTxn.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/InTxn.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/InTxn.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/InTxn.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/InTxn.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/InTxn.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/InTxn.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/InTxn.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/InTxn.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "setExternalDecider", "tail" : "(decider: ExternalDecider): Unit", "member" : "scala.concurrent.stm.InTxnEnd.setExternalDecider", "link" : "scala\/concurrent\/stm\/InTxn.html#setExternalDecider(decider:scala.concurrent.stm.Txn.ExternalDecider):Unit", "kind" : "abstract def"}, {"label" : "afterCompletion", "tail" : "(handler: (Status) ⇒ Unit): Unit", "member" : "scala.concurrent.stm.InTxnEnd.afterCompletion", "link" : "scala\/concurrent\/stm\/InTxn.html#afterCompletion(handler:scala.concurrent.stm.Txn.Status=>Unit):Unit", "kind" : "abstract def"}, {"label" : "afterRollback", "tail" : "(handler: (Status) ⇒ Unit): Unit", "member" : "scala.concurrent.stm.InTxnEnd.afterRollback", "link" : "scala\/concurrent\/stm\/InTxn.html#afterRollback(handler:scala.concurrent.stm.Txn.Status=>Unit):Unit", "kind" : "abstract def"}, {"label" : "afterCommit", "tail" : "(handler: (Status) ⇒ Unit): Unit", "member" : "scala.concurrent.stm.InTxnEnd.afterCommit", "link" : "scala\/concurrent\/stm\/InTxn.html#afterCommit(handler:scala.concurrent.stm.Txn.Status=>Unit):Unit", "kind" : "abstract def"}, {"label" : "whileCommitting", "tail" : "(handler: (InTxnEnd) ⇒ Unit): Unit", "member" : "scala.concurrent.stm.InTxnEnd.whileCommitting", "link" : "scala\/concurrent\/stm\/InTxn.html#whileCommitting(handler:scala.concurrent.stm.InTxnEnd=>Unit):Unit", "kind" : "abstract def"}, {"label" : "whilePreparing", "tail" : "(handler: (InTxnEnd) ⇒ Unit): Unit", "member" : "scala.concurrent.stm.InTxnEnd.whilePreparing", "link" : "scala\/concurrent\/stm\/InTxn.html#whilePreparing(handler:scala.concurrent.stm.InTxnEnd=>Unit):Unit", "kind" : "abstract def"}, {"label" : "beforeCommit", "tail" : "(handler: (InTxn) ⇒ Unit): Unit", "member" : "scala.concurrent.stm.InTxnEnd.beforeCommit", "link" : "scala\/concurrent\/stm\/InTxn.html#beforeCommit(handler:scala.concurrent.stm.InTxn=>Unit):Unit", "kind" : "abstract def"}, {"label" : "retryFor", "tail" : "(timeoutNanos: Long): Unit", "member" : "scala.concurrent.stm.InTxnEnd.retryFor", "link" : "scala\/concurrent\/stm\/InTxn.html#retryFor(timeoutNanos:Long):Unit", "kind" : "abstract def"}, {"label" : "retry", "tail" : "(): Nothing", "member" : "scala.concurrent.stm.InTxnEnd.retry", "link" : "scala\/concurrent\/stm\/InTxn.html#retry():Nothing", "kind" : "abstract def"}, {"label" : "rollback", "tail" : "(cause: RollbackCause): Nothing", "member" : "scala.concurrent.stm.InTxnEnd.rollback", "link" : "scala\/concurrent\/stm\/InTxn.html#rollback(cause:scala.concurrent.stm.Txn.RollbackCause):Nothing", "kind" : "abstract def"}, {"label" : "currentLevel", "tail" : "(): NestingLevel", "member" : "scala.concurrent.stm.InTxnEnd.currentLevel", "link" : "scala\/concurrent\/stm\/InTxn.html#currentLevel:scala.concurrent.stm.NestingLevel", "kind" : "abstract def"}, {"label" : "rootLevel", "tail" : "(): NestingLevel", "member" : "scala.concurrent.stm.InTxnEnd.rootLevel", "link" : "scala\/concurrent\/stm\/InTxn.html#rootLevel:scala.concurrent.stm.NestingLevel", "kind" : "abstract def"}, {"label" : "status", "tail" : "(): Status", "member" : "scala.concurrent.stm.InTxnEnd.status", "link" : "scala\/concurrent\/stm\/InTxn.html#status:scala.concurrent.stm.Txn.Status", "kind" : "abstract def"}], "shortDescription" : "The presence of an implicit InTxn instance grants the caller permission to perform transactional reads and writes on Ref instances, as well as permission to call object Txn methods that require an InTxnEnd.", "trait" : "scala\/concurrent\/stm\/InTxn.html", "kind" : "trait"}, {"name" : "scala.concurrent.stm.InTxnEnd", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/InTxnEnd.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/InTxnEnd.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/InTxnEnd.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/InTxnEnd.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/InTxnEnd.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/InTxnEnd.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/InTxnEnd.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/InTxnEnd.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/InTxnEnd.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/InTxnEnd.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/InTxnEnd.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/InTxnEnd.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/InTxnEnd.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/InTxnEnd.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/InTxnEnd.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/InTxnEnd.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/InTxnEnd.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/InTxnEnd.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/InTxnEnd.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "setExternalDecider", "tail" : "(decider: ExternalDecider): Unit", "member" : "scala.concurrent.stm.InTxnEnd.setExternalDecider", "link" : "scala\/concurrent\/stm\/InTxnEnd.html#setExternalDecider(decider:scala.concurrent.stm.Txn.ExternalDecider):Unit", "kind" : "abstract def"}, {"label" : "afterCompletion", "tail" : "(handler: (Status) ⇒ Unit): Unit", "member" : "scala.concurrent.stm.InTxnEnd.afterCompletion", "link" : "scala\/concurrent\/stm\/InTxnEnd.html#afterCompletion(handler:scala.concurrent.stm.Txn.Status=>Unit):Unit", "kind" : "abstract def"}, {"label" : "afterRollback", "tail" : "(handler: (Status) ⇒ Unit): Unit", "member" : "scala.concurrent.stm.InTxnEnd.afterRollback", "link" : "scala\/concurrent\/stm\/InTxnEnd.html#afterRollback(handler:scala.concurrent.stm.Txn.Status=>Unit):Unit", "kind" : "abstract def"}, {"label" : "afterCommit", "tail" : "(handler: (Status) ⇒ Unit): Unit", "member" : "scala.concurrent.stm.InTxnEnd.afterCommit", "link" : "scala\/concurrent\/stm\/InTxnEnd.html#afterCommit(handler:scala.concurrent.stm.Txn.Status=>Unit):Unit", "kind" : "abstract def"}, {"label" : "whileCommitting", "tail" : "(handler: (InTxnEnd) ⇒ Unit): Unit", "member" : "scala.concurrent.stm.InTxnEnd.whileCommitting", "link" : "scala\/concurrent\/stm\/InTxnEnd.html#whileCommitting(handler:scala.concurrent.stm.InTxnEnd=>Unit):Unit", "kind" : "abstract def"}, {"label" : "whilePreparing", "tail" : "(handler: (InTxnEnd) ⇒ Unit): Unit", "member" : "scala.concurrent.stm.InTxnEnd.whilePreparing", "link" : "scala\/concurrent\/stm\/InTxnEnd.html#whilePreparing(handler:scala.concurrent.stm.InTxnEnd=>Unit):Unit", "kind" : "abstract def"}, {"label" : "beforeCommit", "tail" : "(handler: (InTxn) ⇒ Unit): Unit", "member" : "scala.concurrent.stm.InTxnEnd.beforeCommit", "link" : "scala\/concurrent\/stm\/InTxnEnd.html#beforeCommit(handler:scala.concurrent.stm.InTxn=>Unit):Unit", "kind" : "abstract def"}, {"label" : "retryFor", "tail" : "(timeoutNanos: Long): Unit", "member" : "scala.concurrent.stm.InTxnEnd.retryFor", "link" : "scala\/concurrent\/stm\/InTxnEnd.html#retryFor(timeoutNanos:Long):Unit", "kind" : "abstract def"}, {"label" : "retry", "tail" : "(): Nothing", "member" : "scala.concurrent.stm.InTxnEnd.retry", "link" : "scala\/concurrent\/stm\/InTxnEnd.html#retry():Nothing", "kind" : "abstract def"}, {"label" : "rollback", "tail" : "(cause: RollbackCause): Nothing", "member" : "scala.concurrent.stm.InTxnEnd.rollback", "link" : "scala\/concurrent\/stm\/InTxnEnd.html#rollback(cause:scala.concurrent.stm.Txn.RollbackCause):Nothing", "kind" : "abstract def"}, {"label" : "currentLevel", "tail" : "(): NestingLevel", "member" : "scala.concurrent.stm.InTxnEnd.currentLevel", "link" : "scala\/concurrent\/stm\/InTxnEnd.html#currentLevel:scala.concurrent.stm.NestingLevel", "kind" : "abstract def"}, {"label" : "rootLevel", "tail" : "(): NestingLevel", "member" : "scala.concurrent.stm.InTxnEnd.rootLevel", "link" : "scala\/concurrent\/stm\/InTxnEnd.html#rootLevel:scala.concurrent.stm.NestingLevel", "kind" : "abstract def"}, {"label" : "status", "tail" : "(): Status", "member" : "scala.concurrent.stm.InTxnEnd.status", "link" : "scala\/concurrent\/stm\/InTxnEnd.html#status:scala.concurrent.stm.Txn.Status", "kind" : "abstract def"}], "shortDescription" : "The presence of an implicit InTxnEnd instance inside a transaction life-cycle handler grants permission to call methods in object Txn that locate nesting levels or register additional handlers.", "trait" : "scala\/concurrent\/stm\/InTxnEnd.html", "kind" : "trait"}, {"name" : "scala.concurrent.stm.MaybeTxn", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/MaybeTxn.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/MaybeTxn.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/MaybeTxn.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/MaybeTxn.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/MaybeTxn.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/MaybeTxn.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/MaybeTxn.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/MaybeTxn.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/MaybeTxn.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/MaybeTxn.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/MaybeTxn.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/MaybeTxn.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/MaybeTxn.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/MaybeTxn.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/MaybeTxn.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/MaybeTxn.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/MaybeTxn.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/MaybeTxn.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/MaybeTxn.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "object" : "scala\/concurrent\/stm\/MaybeTxn$.html", "members_object" : [{"label" : "unknown", "tail" : ": TxnUnknown.type", "member" : "scala.concurrent.stm.MaybeTxn.unknown", "link" : "scala\/concurrent\/stm\/MaybeTxn$.html#unknown:scala.concurrent.stm.TxnUnknown.type", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/MaybeTxn$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/MaybeTxn$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/MaybeTxn$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/MaybeTxn$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/MaybeTxn$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/MaybeTxn$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/MaybeTxn$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/MaybeTxn$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/MaybeTxn$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/MaybeTxn$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/MaybeTxn$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/MaybeTxn$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/MaybeTxn$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/MaybeTxn$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/MaybeTxn$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/MaybeTxn$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/MaybeTxn$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/MaybeTxn$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/MaybeTxn$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scala\/concurrent\/stm\/MaybeTxn.html", "kind" : "object"}, {"name" : "scala.concurrent.stm.NestingLevel", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/NestingLevel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/NestingLevel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/NestingLevel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/NestingLevel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/NestingLevel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/NestingLevel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/NestingLevel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/NestingLevel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/NestingLevel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/NestingLevel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/NestingLevel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/NestingLevel.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/NestingLevel.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/NestingLevel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/NestingLevel.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/NestingLevel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/NestingLevel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/NestingLevel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/NestingLevel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "requestRollback", "tail" : "(cause: RollbackCause): Status", "member" : "scala.concurrent.stm.NestingLevel.requestRollback", "link" : "scala\/concurrent\/stm\/NestingLevel.html#requestRollback(cause:scala.concurrent.stm.Txn.RollbackCause):scala.concurrent.stm.Txn.Status", "kind" : "abstract def"}, {"label" : "status", "tail" : "(): Status", "member" : "scala.concurrent.stm.NestingLevel.status", "link" : "scala\/concurrent\/stm\/NestingLevel.html#status:scala.concurrent.stm.Txn.Status", "kind" : "abstract def"}, {"label" : "root", "tail" : "(): NestingLevel", "member" : "scala.concurrent.stm.NestingLevel.root", "link" : "scala\/concurrent\/stm\/NestingLevel.html#root:scala.concurrent.stm.NestingLevel", "kind" : "abstract def"}, {"label" : "parent", "tail" : "(): Option[NestingLevel]", "member" : "scala.concurrent.stm.NestingLevel.parent", "link" : "scala\/concurrent\/stm\/NestingLevel.html#parent:Option[scala.concurrent.stm.NestingLevel]", "kind" : "abstract def"}, {"label" : "executor", "tail" : "(): TxnExecutor", "member" : "scala.concurrent.stm.NestingLevel.executor", "link" : "scala\/concurrent\/stm\/NestingLevel.html#executor:scala.concurrent.stm.TxnExecutor", "kind" : "abstract def"}], "shortDescription" : "", "object" : "scala\/concurrent\/stm\/NestingLevel$.html", "members_object" : [{"label" : "root", "tail" : "(txn: InTxnEnd): NestingLevel", "member" : "scala.concurrent.stm.NestingLevel.root", "link" : "scala\/concurrent\/stm\/NestingLevel$.html#root(implicittxn:scala.concurrent.stm.InTxnEnd):scala.concurrent.stm.NestingLevel", "kind" : "def"}, {"label" : "current", "tail" : "(txn: InTxnEnd): NestingLevel", "member" : "scala.concurrent.stm.NestingLevel.current", "link" : "scala\/concurrent\/stm\/NestingLevel$.html#current(implicittxn:scala.concurrent.stm.InTxnEnd):scala.concurrent.stm.NestingLevel", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/NestingLevel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/NestingLevel$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/NestingLevel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/NestingLevel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/NestingLevel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/NestingLevel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/NestingLevel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/NestingLevel$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/NestingLevel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/NestingLevel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/NestingLevel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/NestingLevel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/NestingLevel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/NestingLevel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/NestingLevel$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/NestingLevel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/NestingLevel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/NestingLevel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/NestingLevel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scala\/concurrent\/stm\/NestingLevel.html", "kind" : "object"}, {"name" : "scala.concurrent.stm.PendingAtomicBlock", "shortDescription" : "Instances of PendingAtomicBlock defer the execution of an atomic block until all of the alternatives can be gathered from the user.", "members_class" : [{"label" : "orAtomic", "tail" : "(below: (InTxn) ⇒ B)(mt: MaybeTxn): B", "member" : "scala.concurrent.stm.PendingAtomicBlock.orAtomic", "link" : "scala\/concurrent\/stm\/PendingAtomicBlock.html#orAtomic[B>:A](below:scala.concurrent.stm.InTxn=>B)(implicitmt:scala.concurrent.stm.MaybeTxn):B", "kind" : "def"}, {"member" : "scala.concurrent.stm.PendingAtomicBlock#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/PendingAtomicBlock.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/PendingAtomicBlock.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/PendingAtomicBlock.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/PendingAtomicBlock.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/PendingAtomicBlock.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/PendingAtomicBlock.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/PendingAtomicBlock.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/PendingAtomicBlock.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/PendingAtomicBlock.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/PendingAtomicBlock.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/PendingAtomicBlock.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/PendingAtomicBlock.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/PendingAtomicBlock.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/PendingAtomicBlock.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/PendingAtomicBlock.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/PendingAtomicBlock.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/PendingAtomicBlock.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/PendingAtomicBlock.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/PendingAtomicBlock.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/concurrent\/stm\/PendingAtomicBlock.html", "kind" : "class"}, {"name" : "scala.concurrent.stm.Ref", "members_trait" : [{"label" : "dbgValue", "tail" : "(): Any", "member" : "scala.concurrent.stm.Source.dbgValue", "link" : "scala\/concurrent\/stm\/Ref.html#dbgValue:Any", "kind" : "def"}, {"label" : "dbgStr", "tail" : "(): String", "member" : "scala.concurrent.stm.Source.dbgStr", "link" : "scala\/concurrent\/stm\/Ref.html#dbgStr:String", "kind" : "def"}, {"label" : "\/=", "tail" : "(rhs: A)(txn: InTxn, num: Numeric[A]): Unit", "member" : "scala.concurrent.stm.RefLike.\/=", "link" : "scala\/concurrent\/stm\/Ref.html#\/=(rhs:A)(implicittxn:Context,implicitnum:Numeric[A]):Unit", "kind" : "def"}, {"label" : "*=", "tail" : "(rhs: A)(txn: InTxn, num: Numeric[A]): Unit", "member" : "scala.concurrent.stm.RefLike.*=", "link" : "scala\/concurrent\/stm\/Ref.html#*=(rhs:A)(implicittxn:Context,implicitnum:Numeric[A]):Unit", "kind" : "def"}, {"label" : "-=", "tail" : "(rhs: A)(txn: InTxn, num: Numeric[A]): Unit", "member" : "scala.concurrent.stm.RefLike.-=", "link" : "scala\/concurrent\/stm\/Ref.html#-=(rhs:A)(implicittxn:Context,implicitnum:Numeric[A]):Unit", "kind" : "def"}, {"label" : "+=", "tail" : "(rhs: A)(txn: InTxn, num: Numeric[A]): Unit", "member" : "scala.concurrent.stm.RefLike.+=", "link" : "scala\/concurrent\/stm\/Ref.html#+=(rhs:A)(implicittxn:Context,implicitnum:Numeric[A]):Unit", "kind" : "def"}, {"label" : "transformAndExtract", "tail" : "(f: (A) ⇒ (A, B))(txn: InTxn): B", "member" : "scala.concurrent.stm.RefLike.transformAndExtract", "link" : "scala\/concurrent\/stm\/Ref.html#transformAndExtract[B](f:A=>(A,B))(implicittxn:Context):B", "kind" : "def"}, {"label" : "getAndTransform", "tail" : "(f: (A) ⇒ A)(txn: InTxn): A", "member" : "scala.concurrent.stm.RefLike.getAndTransform", "link" : "scala\/concurrent\/stm\/Ref.html#getAndTransform(f:A=>A)(implicittxn:Context):A", "kind" : "def"}, {"label" : "transformAndGet", "tail" : "(f: (A) ⇒ A)(txn: InTxn): A", "member" : "scala.concurrent.stm.RefLike.transformAndGet", "link" : "scala\/concurrent\/stm\/Ref.html#transformAndGet(f:A=>A)(implicittxn:Context):A", "kind" : "def"}, {"label" : "update", "tail" : "(v: A)(txn: InTxn): Unit", "member" : "scala.concurrent.stm.SinkLike.update", "link" : "scala\/concurrent\/stm\/Ref.html#update(v:A)(implicittxn:Context):Unit", "kind" : "def"}, {"label" : "apply", "tail" : "()(txn: InTxn): A", "member" : "scala.concurrent.stm.SourceLike.apply", "link" : "scala\/concurrent\/stm\/Ref.html#apply()(implicittxn:Context):A", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/Ref.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/Ref.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/Ref.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/Ref.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/Ref.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/Ref.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/Ref.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/Ref.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/Ref.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/Ref.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/Ref.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/Ref.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/Ref.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/Ref.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/Ref.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/Ref.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/Ref.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/Ref.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/Ref.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "single", "tail" : "(): View[A]", "member" : "scala.concurrent.stm.Ref.single", "link" : "scala\/concurrent\/stm\/Ref.html#single:scala.concurrent.stm.Ref.View[A]", "kind" : "abstract def"}, {"label" : "transformIfDefined", "tail" : "(pf: PartialFunction[A, A])(txn: InTxn): Boolean", "member" : "scala.concurrent.stm.RefLike.transformIfDefined", "link" : "scala\/concurrent\/stm\/Ref.html#transformIfDefined(pf:PartialFunction[A,A])(implicittxn:Context):Boolean", "kind" : "abstract def"}, {"label" : "transform", "tail" : "(f: (A) ⇒ A)(txn: InTxn): Unit", "member" : "scala.concurrent.stm.RefLike.transform", "link" : "scala\/concurrent\/stm\/Ref.html#transform(f:A=>A)(implicittxn:Context):Unit", "kind" : "abstract def"}, {"label" : "swap", "tail" : "(v: A)(txn: InTxn): A", "member" : "scala.concurrent.stm.RefLike.swap", "link" : "scala\/concurrent\/stm\/Ref.html#swap(v:A)(implicittxn:Context):A", "kind" : "abstract def"}, {"label" : "trySet", "tail" : "(v: A)(txn: InTxn): Boolean", "member" : "scala.concurrent.stm.SinkLike.trySet", "link" : "scala\/concurrent\/stm\/Ref.html#trySet(v:A)(implicittxn:Context):Boolean", "kind" : "abstract def"}, {"label" : "set", "tail" : "(v: A)(txn: InTxn): Unit", "member" : "scala.concurrent.stm.SinkLike.set", "link" : "scala\/concurrent\/stm\/Ref.html#set(v:A)(implicittxn:Context):Unit", "kind" : "abstract def"}, {"label" : "relaxedGet", "tail" : "(equiv: (A, A) ⇒ Boolean)(txn: InTxn): A", "member" : "scala.concurrent.stm.SourceLike.relaxedGet", "link" : "scala\/concurrent\/stm\/Ref.html#relaxedGet(equiv:(A,A)=>Boolean)(implicittxn:Context):A", "kind" : "abstract def"}, {"label" : "getWith", "tail" : "(f: (A) ⇒ Z)(txn: InTxn): Z", "member" : "scala.concurrent.stm.SourceLike.getWith", "link" : "scala\/concurrent\/stm\/Ref.html#getWith[Z](f:A=>Z)(implicittxn:Context):Z", "kind" : "abstract def"}, {"label" : "get", "tail" : "(txn: InTxn): A", "member" : "scala.concurrent.stm.SourceLike.get", "link" : "scala\/concurrent\/stm\/Ref.html#get(implicittxn:Context):A", "kind" : "abstract def"}], "shortDescription" : "object Ref contains factory methods that allocate an STM-managed memory location and return a Ref instance that provides access to that location.", "object" : "scala\/concurrent\/stm\/Ref$.html", "members_object" : [{"label" : "View", "tail" : "", "member" : "scala.concurrent.stm.Ref.View", "link" : "scala\/concurrent\/stm\/Ref$.html#View[A]extendsSource.View[A]withSink.View[A]", "kind" : "trait"}, {"label" : "factory", "tail" : "(): RefFactory", "member" : "scala.concurrent.stm.Ref.factory", "link" : "scala\/concurrent\/stm\/Ref$.html#factory:scala.concurrent.stm.impl.RefFactory", "kind" : "def"}, {"label" : "apply", "tail" : "(initialValue: Unit): Ref[Unit]", "member" : "scala.concurrent.stm.RefCompanion.apply", "link" : "scala\/concurrent\/stm\/Ref$.html#apply(initialValue:Unit):scala.concurrent.stm.Ref[Unit]", "kind" : "def"}, {"label" : "apply", "tail" : "(initialValue: Double): Ref[Double]", "member" : "scala.concurrent.stm.RefCompanion.apply", "link" : "scala\/concurrent\/stm\/Ref$.html#apply(initialValue:Double):scala.concurrent.stm.Ref[Double]", "kind" : "def"}, {"label" : "apply", "tail" : "(initialValue: Float): Ref[Float]", "member" : "scala.concurrent.stm.RefCompanion.apply", "link" : "scala\/concurrent\/stm\/Ref$.html#apply(initialValue:Float):scala.concurrent.stm.Ref[Float]", "kind" : "def"}, {"label" : "apply", "tail" : "(initialValue: Long): Ref[Long]", "member" : "scala.concurrent.stm.RefCompanion.apply", "link" : "scala\/concurrent\/stm\/Ref$.html#apply(initialValue:Long):scala.concurrent.stm.Ref[Long]", "kind" : "def"}, {"label" : "apply", "tail" : "(initialValue: Int): Ref[Int]", "member" : "scala.concurrent.stm.RefCompanion.apply", "link" : "scala\/concurrent\/stm\/Ref$.html#apply(initialValue:Int):scala.concurrent.stm.Ref[Int]", "kind" : "def"}, {"label" : "apply", "tail" : "(initialValue: Char): Ref[Char]", "member" : "scala.concurrent.stm.RefCompanion.apply", "link" : "scala\/concurrent\/stm\/Ref$.html#apply(initialValue:Char):scala.concurrent.stm.Ref[Char]", "kind" : "def"}, {"label" : "apply", "tail" : "(initialValue: Short): Ref[Short]", "member" : "scala.concurrent.stm.RefCompanion.apply", "link" : "scala\/concurrent\/stm\/Ref$.html#apply(initialValue:Short):scala.concurrent.stm.Ref[Short]", "kind" : "def"}, {"label" : "apply", "tail" : "(initialValue: Byte): Ref[Byte]", "member" : "scala.concurrent.stm.RefCompanion.apply", "link" : "scala\/concurrent\/stm\/Ref$.html#apply(initialValue:Byte):scala.concurrent.stm.Ref[Byte]", "kind" : "def"}, {"label" : "apply", "tail" : "(initialValue: Boolean): Ref[Boolean]", "member" : "scala.concurrent.stm.RefCompanion.apply", "link" : "scala\/concurrent\/stm\/Ref$.html#apply(initialValue:Boolean):scala.concurrent.stm.Ref[Boolean]", "kind" : "def"}, {"label" : "apply", "tail" : "(initialValue: A)(om: OptManifest[A]): Ref[A]", "member" : "scala.concurrent.stm.RefCompanion.apply", "link" : "scala\/concurrent\/stm\/Ref$.html#apply[A](initialValue:A)(implicitom:scala.reflect.OptManifest[A]):scala.concurrent.stm.Ref[A]", "kind" : "def"}, {"label" : "make", "tail" : "()(om: OptManifest[A]): Ref[A]", "member" : "scala.concurrent.stm.RefCompanion.make", "link" : "scala\/concurrent\/stm\/Ref$.html#make[A]()(implicitom:scala.reflect.OptManifest[A]):scala.concurrent.stm.Ref[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/Ref$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/Ref$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/Ref$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/Ref$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/Ref$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/Ref$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/Ref$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/Ref$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/Ref$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/Ref$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/Ref$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/Ref$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/Ref$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/Ref$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/Ref$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/Ref$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/Ref$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/Ref$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/Ref$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scala\/concurrent\/stm\/Ref.html", "kind" : "object"}, {"name" : "scala.concurrent.stm.RefCompanion", "members_trait" : [{"label" : "apply", "tail" : "(initialValue: Unit): Ref[Unit]", "member" : "scala.concurrent.stm.RefCompanion.apply", "link" : "scala\/concurrent\/stm\/RefCompanion.html#apply(initialValue:Unit):scala.concurrent.stm.Ref[Unit]", "kind" : "def"}, {"label" : "apply", "tail" : "(initialValue: Double): Ref[Double]", "member" : "scala.concurrent.stm.RefCompanion.apply", "link" : "scala\/concurrent\/stm\/RefCompanion.html#apply(initialValue:Double):scala.concurrent.stm.Ref[Double]", "kind" : "def"}, {"label" : "apply", "tail" : "(initialValue: Float): Ref[Float]", "member" : "scala.concurrent.stm.RefCompanion.apply", "link" : "scala\/concurrent\/stm\/RefCompanion.html#apply(initialValue:Float):scala.concurrent.stm.Ref[Float]", "kind" : "def"}, {"label" : "apply", "tail" : "(initialValue: Long): Ref[Long]", "member" : "scala.concurrent.stm.RefCompanion.apply", "link" : "scala\/concurrent\/stm\/RefCompanion.html#apply(initialValue:Long):scala.concurrent.stm.Ref[Long]", "kind" : "def"}, {"label" : "apply", "tail" : "(initialValue: Int): Ref[Int]", "member" : "scala.concurrent.stm.RefCompanion.apply", "link" : "scala\/concurrent\/stm\/RefCompanion.html#apply(initialValue:Int):scala.concurrent.stm.Ref[Int]", "kind" : "def"}, {"label" : "apply", "tail" : "(initialValue: Char): Ref[Char]", "member" : "scala.concurrent.stm.RefCompanion.apply", "link" : "scala\/concurrent\/stm\/RefCompanion.html#apply(initialValue:Char):scala.concurrent.stm.Ref[Char]", "kind" : "def"}, {"label" : "apply", "tail" : "(initialValue: Short): Ref[Short]", "member" : "scala.concurrent.stm.RefCompanion.apply", "link" : "scala\/concurrent\/stm\/RefCompanion.html#apply(initialValue:Short):scala.concurrent.stm.Ref[Short]", "kind" : "def"}, {"label" : "apply", "tail" : "(initialValue: Byte): Ref[Byte]", "member" : "scala.concurrent.stm.RefCompanion.apply", "link" : "scala\/concurrent\/stm\/RefCompanion.html#apply(initialValue:Byte):scala.concurrent.stm.Ref[Byte]", "kind" : "def"}, {"label" : "apply", "tail" : "(initialValue: Boolean): Ref[Boolean]", "member" : "scala.concurrent.stm.RefCompanion.apply", "link" : "scala\/concurrent\/stm\/RefCompanion.html#apply(initialValue:Boolean):scala.concurrent.stm.Ref[Boolean]", "kind" : "def"}, {"label" : "apply", "tail" : "(initialValue: A)(om: OptManifest[A]): Ref[A]", "member" : "scala.concurrent.stm.RefCompanion.apply", "link" : "scala\/concurrent\/stm\/RefCompanion.html#apply[A](initialValue:A)(implicitom:scala.reflect.OptManifest[A]):scala.concurrent.stm.Ref[A]", "kind" : "def"}, {"label" : "make", "tail" : "()(om: OptManifest[A]): Ref[A]", "member" : "scala.concurrent.stm.RefCompanion.make", "link" : "scala\/concurrent\/stm\/RefCompanion.html#make[A]()(implicitom:scala.reflect.OptManifest[A]):scala.concurrent.stm.Ref[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/RefCompanion.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/RefCompanion.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/RefCompanion.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/RefCompanion.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/RefCompanion.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/RefCompanion.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/RefCompanion.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/RefCompanion.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/RefCompanion.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/RefCompanion.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/RefCompanion.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/RefCompanion.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/RefCompanion.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/RefCompanion.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/RefCompanion.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/RefCompanion.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/RefCompanion.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/RefCompanion.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/RefCompanion.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "factory", "tail" : "(): RefFactory", "member" : "scala.concurrent.stm.RefCompanion.factory", "link" : "scala\/concurrent\/stm\/RefCompanion.html#factory:scala.concurrent.stm.impl.RefFactory", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "scala\/concurrent\/stm\/RefCompanion.html", "kind" : "trait"}, {"name" : "scala.concurrent.stm.RefLike", "members_trait" : [{"label" : "\/=", "tail" : "(rhs: A)(txn: Context, num: Numeric[A]): Unit", "member" : "scala.concurrent.stm.RefLike.\/=", "link" : "scala\/concurrent\/stm\/RefLike.html#\/=(rhs:A)(implicittxn:Context,implicitnum:Numeric[A]):Unit", "kind" : "def"}, {"label" : "*=", "tail" : "(rhs: A)(txn: Context, num: Numeric[A]): Unit", "member" : "scala.concurrent.stm.RefLike.*=", "link" : "scala\/concurrent\/stm\/RefLike.html#*=(rhs:A)(implicittxn:Context,implicitnum:Numeric[A]):Unit", "kind" : "def"}, {"label" : "-=", "tail" : "(rhs: A)(txn: Context, num: Numeric[A]): Unit", "member" : "scala.concurrent.stm.RefLike.-=", "link" : "scala\/concurrent\/stm\/RefLike.html#-=(rhs:A)(implicittxn:Context,implicitnum:Numeric[A]):Unit", "kind" : "def"}, {"label" : "+=", "tail" : "(rhs: A)(txn: Context, num: Numeric[A]): Unit", "member" : "scala.concurrent.stm.RefLike.+=", "link" : "scala\/concurrent\/stm\/RefLike.html#+=(rhs:A)(implicittxn:Context,implicitnum:Numeric[A]):Unit", "kind" : "def"}, {"label" : "transformAndExtract", "tail" : "(f: (A) ⇒ (A, B))(txn: Context): B", "member" : "scala.concurrent.stm.RefLike.transformAndExtract", "link" : "scala\/concurrent\/stm\/RefLike.html#transformAndExtract[B](f:A=>(A,B))(implicittxn:Context):B", "kind" : "def"}, {"label" : "getAndTransform", "tail" : "(f: (A) ⇒ A)(txn: Context): A", "member" : "scala.concurrent.stm.RefLike.getAndTransform", "link" : "scala\/concurrent\/stm\/RefLike.html#getAndTransform(f:A=>A)(implicittxn:Context):A", "kind" : "def"}, {"label" : "transformAndGet", "tail" : "(f: (A) ⇒ A)(txn: Context): A", "member" : "scala.concurrent.stm.RefLike.transformAndGet", "link" : "scala\/concurrent\/stm\/RefLike.html#transformAndGet(f:A=>A)(implicittxn:Context):A", "kind" : "def"}, {"label" : "update", "tail" : "(v: A)(txn: Context): Unit", "member" : "scala.concurrent.stm.SinkLike.update", "link" : "scala\/concurrent\/stm\/RefLike.html#update(v:A)(implicittxn:Context):Unit", "kind" : "def"}, {"label" : "apply", "tail" : "()(txn: Context): A", "member" : "scala.concurrent.stm.SourceLike.apply", "link" : "scala\/concurrent\/stm\/RefLike.html#apply()(implicittxn:Context):A", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/RefLike.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/RefLike.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/RefLike.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/RefLike.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/RefLike.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/RefLike.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/RefLike.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/RefLike.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/RefLike.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/RefLike.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/RefLike.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/RefLike.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/RefLike.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/RefLike.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/RefLike.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/RefLike.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/RefLike.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/RefLike.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/RefLike.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "transformIfDefined", "tail" : "(pf: PartialFunction[A, A])(txn: Context): Boolean", "member" : "scala.concurrent.stm.RefLike.transformIfDefined", "link" : "scala\/concurrent\/stm\/RefLike.html#transformIfDefined(pf:PartialFunction[A,A])(implicittxn:Context):Boolean", "kind" : "abstract def"}, {"label" : "transform", "tail" : "(f: (A) ⇒ A)(txn: Context): Unit", "member" : "scala.concurrent.stm.RefLike.transform", "link" : "scala\/concurrent\/stm\/RefLike.html#transform(f:A=>A)(implicittxn:Context):Unit", "kind" : "abstract def"}, {"label" : "swap", "tail" : "(v: A)(txn: Context): A", "member" : "scala.concurrent.stm.RefLike.swap", "link" : "scala\/concurrent\/stm\/RefLike.html#swap(v:A)(implicittxn:Context):A", "kind" : "abstract def"}, {"label" : "trySet", "tail" : "(v: A)(txn: Context): Boolean", "member" : "scala.concurrent.stm.SinkLike.trySet", "link" : "scala\/concurrent\/stm\/RefLike.html#trySet(v:A)(implicittxn:Context):Boolean", "kind" : "abstract def"}, {"label" : "set", "tail" : "(v: A)(txn: Context): Unit", "member" : "scala.concurrent.stm.SinkLike.set", "link" : "scala\/concurrent\/stm\/RefLike.html#set(v:A)(implicittxn:Context):Unit", "kind" : "abstract def"}, {"label" : "relaxedGet", "tail" : "(equiv: (A, A) ⇒ Boolean)(txn: Context): A", "member" : "scala.concurrent.stm.SourceLike.relaxedGet", "link" : "scala\/concurrent\/stm\/RefLike.html#relaxedGet(equiv:(A,A)=>Boolean)(implicittxn:Context):A", "kind" : "abstract def"}, {"label" : "getWith", "tail" : "(f: (A) ⇒ Z)(txn: Context): Z", "member" : "scala.concurrent.stm.SourceLike.getWith", "link" : "scala\/concurrent\/stm\/RefLike.html#getWith[Z](f:A=>Z)(implicittxn:Context):Z", "kind" : "abstract def"}, {"label" : "get", "tail" : "(txn: Context): A", "member" : "scala.concurrent.stm.SourceLike.get", "link" : "scala\/concurrent\/stm\/RefLike.html#get(implicittxn:Context):A", "kind" : "abstract def"}], "shortDescription" : "Provides all of the operations of a Ref[A], without the ability to get a Ref.View.", "trait" : "scala\/concurrent\/stm\/RefLike.html", "kind" : "trait"}, {"name" : "scala.concurrent.stm.Sink", "members_trait" : [{"label" : "update", "tail" : "(v: A)(txn: InTxn): Unit", "member" : "scala.concurrent.stm.SinkLike.update", "link" : "scala\/concurrent\/stm\/Sink.html#update(v:A)(implicittxn:Context):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/Sink.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/Sink.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/Sink.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/Sink.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/Sink.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/Sink.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/Sink.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/Sink.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/Sink.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/Sink.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/Sink.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/Sink.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/Sink.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/Sink.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/Sink.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/Sink.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/Sink.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/Sink.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/Sink.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "single", "tail" : "(): View[A]", "member" : "scala.concurrent.stm.Sink.single", "link" : "scala\/concurrent\/stm\/Sink.html#single:scala.concurrent.stm.Sink.View[A]", "kind" : "abstract def"}, {"label" : "trySet", "tail" : "(v: A)(txn: InTxn): Boolean", "member" : "scala.concurrent.stm.SinkLike.trySet", "link" : "scala\/concurrent\/stm\/Sink.html#trySet(v:A)(implicittxn:Context):Boolean", "kind" : "abstract def"}, {"label" : "set", "tail" : "(v: A)(txn: InTxn): Unit", "member" : "scala.concurrent.stm.SinkLike.set", "link" : "scala\/concurrent\/stm\/Sink.html#set(v:A)(implicittxn:Context):Unit", "kind" : "abstract def"}], "shortDescription" : "", "object" : "scala\/concurrent\/stm\/Sink$.html", "members_object" : [{"label" : "View", "tail" : "", "member" : "scala.concurrent.stm.Sink.View", "link" : "scala\/concurrent\/stm\/Sink$.html#View[-A]extendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/Sink$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/Sink$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/Sink$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/Sink$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/Sink$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/Sink$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/Sink$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/Sink$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/Sink$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/Sink$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/Sink$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/Sink$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/Sink$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/Sink$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/Sink$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/Sink$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/Sink$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/Sink$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/Sink$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scala\/concurrent\/stm\/Sink.html", "kind" : "object"}, {"name" : "scala.concurrent.stm.SinkLike", "members_trait" : [{"label" : "update", "tail" : "(v: A)(txn: Context): Unit", "member" : "scala.concurrent.stm.SinkLike.update", "link" : "scala\/concurrent\/stm\/SinkLike.html#update(v:A)(implicittxn:Context):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/SinkLike.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/SinkLike.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/SinkLike.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/SinkLike.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/SinkLike.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/SinkLike.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/SinkLike.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/SinkLike.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/SinkLike.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/SinkLike.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/SinkLike.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/SinkLike.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/SinkLike.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/SinkLike.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/SinkLike.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/SinkLike.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/SinkLike.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/SinkLike.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/SinkLike.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "trySet", "tail" : "(v: A)(txn: Context): Boolean", "member" : "scala.concurrent.stm.SinkLike.trySet", "link" : "scala\/concurrent\/stm\/SinkLike.html#trySet(v:A)(implicittxn:Context):Boolean", "kind" : "abstract def"}, {"label" : "set", "tail" : "(v: A)(txn: Context): Unit", "member" : "scala.concurrent.stm.SinkLike.set", "link" : "scala\/concurrent\/stm\/SinkLike.html#set(v:A)(implicittxn:Context):Unit", "kind" : "abstract def"}], "shortDescription" : "Provides all of the operations of a Sink[A], without the ability to get a Sink.View.", "trait" : "scala\/concurrent\/stm\/SinkLike.html", "kind" : "trait"}, {"name" : "scala.concurrent.stm.Source", "members_trait" : [{"label" : "dbgValue", "tail" : "(): Any", "member" : "scala.concurrent.stm.Source.dbgValue", "link" : "scala\/concurrent\/stm\/Source.html#dbgValue:Any", "kind" : "def"}, {"label" : "dbgStr", "tail" : "(): String", "member" : "scala.concurrent.stm.Source.dbgStr", "link" : "scala\/concurrent\/stm\/Source.html#dbgStr:String", "kind" : "def"}, {"label" : "apply", "tail" : "()(txn: InTxn): A", "member" : "scala.concurrent.stm.SourceLike.apply", "link" : "scala\/concurrent\/stm\/Source.html#apply()(implicittxn:Context):A", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/Source.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/Source.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/Source.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/Source.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/Source.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/Source.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/Source.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/Source.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/Source.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/Source.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/Source.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/Source.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/Source.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/Source.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/Source.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/Source.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/Source.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/Source.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/Source.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "single", "tail" : "(): View[A]", "member" : "scala.concurrent.stm.Source.single", "link" : "scala\/concurrent\/stm\/Source.html#single:scala.concurrent.stm.Source.View[A]", "kind" : "abstract def"}, {"label" : "relaxedGet", "tail" : "(equiv: (A, A) ⇒ Boolean)(txn: InTxn): A", "member" : "scala.concurrent.stm.SourceLike.relaxedGet", "link" : "scala\/concurrent\/stm\/Source.html#relaxedGet(equiv:(A,A)=>Boolean)(implicittxn:Context):A", "kind" : "abstract def"}, {"label" : "getWith", "tail" : "(f: (A) ⇒ Z)(txn: InTxn): Z", "member" : "scala.concurrent.stm.SourceLike.getWith", "link" : "scala\/concurrent\/stm\/Source.html#getWith[Z](f:A=>Z)(implicittxn:Context):Z", "kind" : "abstract def"}, {"label" : "get", "tail" : "(txn: InTxn): A", "member" : "scala.concurrent.stm.SourceLike.get", "link" : "scala\/concurrent\/stm\/Source.html#get(implicittxn:Context):A", "kind" : "abstract def"}], "shortDescription" : "", "object" : "scala\/concurrent\/stm\/Source$.html", "members_object" : [{"label" : "View", "tail" : "", "member" : "scala.concurrent.stm.Source.View", "link" : "scala\/concurrent\/stm\/Source$.html#View[+A]extendsTxnDebuggable", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/Source$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/Source$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/Source$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/Source$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/Source$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/Source$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/Source$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/Source$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/Source$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/Source$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/Source$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/Source$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/Source$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/Source$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/Source$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/Source$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/Source$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/Source$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/Source$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scala\/concurrent\/stm\/Source.html", "kind" : "object"}, {"name" : "scala.concurrent.stm.SourceLike", "members_trait" : [{"label" : "apply", "tail" : "()(txn: Context): A", "member" : "scala.concurrent.stm.SourceLike.apply", "link" : "scala\/concurrent\/stm\/SourceLike.html#apply()(implicittxn:Context):A", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/SourceLike.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/SourceLike.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/SourceLike.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/SourceLike.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/SourceLike.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/SourceLike.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/SourceLike.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/SourceLike.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/SourceLike.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/SourceLike.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/SourceLike.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/SourceLike.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/SourceLike.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/SourceLike.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/SourceLike.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/SourceLike.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/SourceLike.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/SourceLike.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/SourceLike.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "relaxedGet", "tail" : "(equiv: (A, A) ⇒ Boolean)(txn: Context): A", "member" : "scala.concurrent.stm.SourceLike.relaxedGet", "link" : "scala\/concurrent\/stm\/SourceLike.html#relaxedGet(equiv:(A,A)=>Boolean)(implicittxn:Context):A", "kind" : "abstract def"}, {"label" : "getWith", "tail" : "(f: (A) ⇒ Z)(txn: Context): Z", "member" : "scala.concurrent.stm.SourceLike.getWith", "link" : "scala\/concurrent\/stm\/SourceLike.html#getWith[Z](f:A=>Z)(implicittxn:Context):Z", "kind" : "abstract def"}, {"label" : "get", "tail" : "(txn: Context): A", "member" : "scala.concurrent.stm.SourceLike.get", "link" : "scala\/concurrent\/stm\/SourceLike.html#get(implicittxn:Context):A", "kind" : "abstract def"}], "shortDescription" : "Provides all of the operations of a Source[A], without the ability to get a Source.View.", "trait" : "scala\/concurrent\/stm\/SourceLike.html", "kind" : "trait"}, {"name" : "scala.concurrent.stm.TArray", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/TArray.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/TArray.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/TArray.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/TArray.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/TArray.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/TArray.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/TArray.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/TArray.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/TArray.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/TArray.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/TArray.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/TArray.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/TArray.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/TArray.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/TArray.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/TArray.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/TArray.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/TArray.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/TArray.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "refs", "tail" : "(): collection.immutable.IndexedSeq[Ref[A]]", "member" : "scala.concurrent.stm.TArray.refs", "link" : "scala\/concurrent\/stm\/TArray.html#refs:scala.collection.immutable.IndexedSeq[scala.concurrent.stm.Ref[A]]", "kind" : "abstract def"}, {"label" : "single", "tail" : "(): View[A]", "member" : "scala.concurrent.stm.TArray.single", "link" : "scala\/concurrent\/stm\/TArray.html#single:scala.concurrent.stm.TArray.View[A]", "kind" : "abstract def"}, {"label" : "update", "tail" : "(index: Int, v: A)(txn: InTxn): Unit", "member" : "scala.concurrent.stm.TArray.update", "link" : "scala\/concurrent\/stm\/TArray.html#update(index:Int,v:A)(implicittxn:scala.concurrent.stm.InTxn):Unit", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(index: Int)(txn: InTxn): A", "member" : "scala.concurrent.stm.TArray.apply", "link" : "scala\/concurrent\/stm\/TArray.html#apply(index:Int)(implicittxn:scala.concurrent.stm.InTxn):A", "kind" : "abstract def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.concurrent.stm.TArray.length", "link" : "scala\/concurrent\/stm\/TArray.html#length:Int", "kind" : "abstract def"}, {"label" : "dbgValue", "tail" : "(): Any", "member" : "scala.concurrent.stm.TxnDebuggable.dbgValue", "link" : "scala\/concurrent\/stm\/TArray.html#dbgValue:Any", "kind" : "abstract def"}, {"label" : "dbgStr", "tail" : "(): String", "member" : "scala.concurrent.stm.TxnDebuggable.dbgStr", "link" : "scala\/concurrent\/stm\/TArray.html#dbgStr:String", "kind" : "abstract def"}], "shortDescription" : "", "object" : "scala\/concurrent\/stm\/TArray$.html", "members_object" : [{"label" : "apply", "tail" : "(data: TraversableOnce[A])(arg0: ClassManifest[A]): TArray[A]", "member" : "scala.concurrent.stm.TArray.apply", "link" : "scala\/concurrent\/stm\/TArray$.html#apply[A](data:TraversableOnce[A])(implicitevidence$2:ClassManifest[A]):scala.concurrent.stm.TArray[A]", "kind" : "def"}, {"label" : "ofDim", "tail" : "(length: Int)(arg0: ClassManifest[A]): TArray[A]", "member" : "scala.concurrent.stm.TArray.ofDim", "link" : "scala\/concurrent\/stm\/TArray$.html#ofDim[A](length:Int)(implicitevidence$1:ClassManifest[A]):scala.concurrent.stm.TArray[A]", "kind" : "def"}, {"label" : "View", "tail" : "", "member" : "scala.concurrent.stm.TArray.View", "link" : "scala\/concurrent\/stm\/TArray$.html#View[A]extendsIndexedSeq[A]withTxnDebuggable", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/TArray$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/TArray$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/TArray$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/TArray$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/TArray$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/TArray$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/TArray$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/TArray$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/TArray$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/TArray$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/TArray$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/TArray$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/TArray$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/TArray$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/TArray$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/TArray$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/TArray$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/TArray$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/TArray$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scala\/concurrent\/stm\/TArray.html", "kind" : "object"}, {"name" : "scala.concurrent.stm.TMap", "members_trait" : [{"label" : "--=", "tail" : "(ks: TraversableOnce[A])(txn: InTxn): TMap.this.type", "member" : "scala.concurrent.stm.TMap.--=", "link" : "scala\/concurrent\/stm\/TMap.html#--=(ks:TraversableOnce[A])(implicittxn:scala.concurrent.stm.InTxn):TMap.this.type", "kind" : "def"}, {"label" : "-=", "tail" : "(k1: A, k2: A, ks: A*)(txn: InTxn): TMap.this.type", "member" : "scala.concurrent.stm.TMap.-=", "link" : "scala\/concurrent\/stm\/TMap.html#-=(k1:A,k2:A,ks:A*)(implicittxn:scala.concurrent.stm.InTxn):TMap.this.type", "kind" : "def"}, {"label" : "-=", "tail" : "(k: A)(txn: InTxn): TMap.this.type", "member" : "scala.concurrent.stm.TMap.-=", "link" : "scala\/concurrent\/stm\/TMap.html#-=(k:A)(implicittxn:scala.concurrent.stm.InTxn):TMap.this.type", "kind" : "def"}, {"label" : "++=", "tail" : "(kvs: TraversableOnce[(A, B)])(txn: InTxn): TMap.this.type", "member" : "scala.concurrent.stm.TMap.++=", "link" : "scala\/concurrent\/stm\/TMap.html#++=(kvs:TraversableOnce[(A,B)])(implicittxn:scala.concurrent.stm.InTxn):TMap.this.type", "kind" : "def"}, {"label" : "+=", "tail" : "(kv1: (A, B), kv2: (A, B), kvs: (A, B)*)(txn: InTxn): TMap.this.type", "member" : "scala.concurrent.stm.TMap.+=", "link" : "scala\/concurrent\/stm\/TMap.html#+=(kv1:(A,B),kv2:(A,B),kvs:(A,B)*)(implicittxn:scala.concurrent.stm.InTxn):TMap.this.type", "kind" : "def"}, {"label" : "+=", "tail" : "(kv: (A, B))(txn: InTxn): TMap.this.type", "member" : "scala.concurrent.stm.TMap.+=", "link" : "scala\/concurrent\/stm\/TMap.html#+=(kv:(A,B))(implicittxn:scala.concurrent.stm.InTxn):TMap.this.type", "kind" : "def"}, {"label" : "update", "tail" : "(key: A, value: B)(txn: InTxn): Unit", "member" : "scala.concurrent.stm.TMap.update", "link" : "scala\/concurrent\/stm\/TMap.html#update(key:A,value:B)(implicittxn:scala.concurrent.stm.InTxn):Unit", "kind" : "def"}, {"label" : "snapshot", "tail" : "(): Map[A, B]", "member" : "scala.concurrent.stm.TMap.snapshot", "link" : "scala\/concurrent\/stm\/TMap.html#snapshot:scala.collection.immutable.Map[A,B]", "kind" : "def"}, {"label" : "clone", "tail" : "(txn: InTxn): TMap[A, B]", "member" : "scala.concurrent.stm.TMap.clone", "link" : "scala\/concurrent\/stm\/TMap.html#clone(implicittxn:scala.concurrent.stm.InTxn):scala.concurrent.stm.TMap[A,B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/TMap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/TMap.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/TMap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/TMap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/TMap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/TMap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/TMap.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/TMap.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/TMap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/TMap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/TMap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/TMap.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/TMap.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/TMap.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/TMap.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/TMap.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/TMap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/TMap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/TMap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "retain", "tail" : "(p: (A, B) ⇒ Boolean)(txn: InTxn): TMap.this.type", "member" : "scala.concurrent.stm.TMap.retain", "link" : "scala\/concurrent\/stm\/TMap.html#retain(p:(A,B)=>Boolean)(implicittxn:scala.concurrent.stm.InTxn):TMap.this.type", "kind" : "abstract def"}, {"label" : "transform", "tail" : "(f: (A, B) ⇒ B)(txn: InTxn): TMap.this.type", "member" : "scala.concurrent.stm.TMap.transform", "link" : "scala\/concurrent\/stm\/TMap.html#transform(f:(A,B)=>B)(implicittxn:scala.concurrent.stm.InTxn):TMap.this.type", "kind" : "abstract def"}, {"label" : "remove", "tail" : "(key: A)(txn: InTxn): Option[B]", "member" : "scala.concurrent.stm.TMap.remove", "link" : "scala\/concurrent\/stm\/TMap.html#remove(key:A)(implicittxn:scala.concurrent.stm.InTxn):Option[B]", "kind" : "abstract def"}, {"label" : "put", "tail" : "(key: A, value: B)(txn: InTxn): Option[B]", "member" : "scala.concurrent.stm.TMap.put", "link" : "scala\/concurrent\/stm\/TMap.html#put(key:A,value:B)(implicittxn:scala.concurrent.stm.InTxn):Option[B]", "kind" : "abstract def"}, {"label" : "get", "tail" : "(key: A)(txn: InTxn): Option[B]", "member" : "scala.concurrent.stm.TMap.get", "link" : "scala\/concurrent\/stm\/TMap.html#get(key:A)(implicittxn:scala.concurrent.stm.InTxn):Option[B]", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(key: A)(txn: InTxn): B", "member" : "scala.concurrent.stm.TMap.apply", "link" : "scala\/concurrent\/stm\/TMap.html#apply(key:A)(implicittxn:scala.concurrent.stm.InTxn):B", "kind" : "abstract def"}, {"label" : "contains", "tail" : "(key: A)(txn: InTxn): Boolean", "member" : "scala.concurrent.stm.TMap.contains", "link" : "scala\/concurrent\/stm\/TMap.html#contains(key:A)(implicittxn:scala.concurrent.stm.InTxn):Boolean", "kind" : "abstract def"}, {"label" : "foreach", "tail" : "(f: ((A, B)) ⇒ U)(txn: InTxn): Unit", "member" : "scala.concurrent.stm.TMap.foreach", "link" : "scala\/concurrent\/stm\/TMap.html#foreach[U](f:((A,B))=>U)(implicittxn:scala.concurrent.stm.InTxn):Unit", "kind" : "abstract def"}, {"label" : "size", "tail" : "(txn: InTxn): Int", "member" : "scala.concurrent.stm.TMap.size", "link" : "scala\/concurrent\/stm\/TMap.html#size(implicittxn:scala.concurrent.stm.InTxn):Int", "kind" : "abstract def"}, {"label" : "isEmpty", "tail" : "(txn: InTxn): Boolean", "member" : "scala.concurrent.stm.TMap.isEmpty", "link" : "scala\/concurrent\/stm\/TMap.html#isEmpty(implicittxn:scala.concurrent.stm.InTxn):Boolean", "kind" : "abstract def"}, {"label" : "single", "tail" : "(): View[A, B]", "member" : "scala.concurrent.stm.TMap.single", "link" : "scala\/concurrent\/stm\/TMap.html#single:scala.concurrent.stm.TMap.View[A,B]", "kind" : "abstract def"}, {"label" : "dbgValue", "tail" : "(): Any", "member" : "scala.concurrent.stm.TxnDebuggable.dbgValue", "link" : "scala\/concurrent\/stm\/TMap.html#dbgValue:Any", "kind" : "abstract def"}, {"label" : "dbgStr", "tail" : "(): String", "member" : "scala.concurrent.stm.TxnDebuggable.dbgStr", "link" : "scala\/concurrent\/stm\/TMap.html#dbgStr:String", "kind" : "abstract def"}], "shortDescription" : "", "object" : "scala\/concurrent\/stm\/TMap$.html", "members_object" : [{"label" : "asMap", "tail" : "(m: TMap[A, B])(txn: InTxn): View[A, B]", "member" : "scala.concurrent.stm.TMap.asMap", "link" : "scala\/concurrent\/stm\/TMap$.html#asMap[A,B](m:scala.concurrent.stm.TMap[A,B])(implicittxn:scala.concurrent.stm.InTxn):scala.concurrent.stm.TMap.View[A,B]", "kind" : "implicit def"}, {"label" : "apply", "tail" : "(kvs: (A, B)*): TMap[A, B]", "member" : "scala.concurrent.stm.TMap.apply", "link" : "scala\/concurrent\/stm\/TMap$.html#apply[A,B](kvs:(A,B)*):scala.concurrent.stm.TMap[A,B]", "kind" : "def"}, {"label" : "newBuilder", "tail" : "(): Builder[(A, B), TMap[A, B]]", "member" : "scala.concurrent.stm.TMap.newBuilder", "link" : "scala\/concurrent\/stm\/TMap$.html#newBuilder[A,B]:scala.collection.mutable.Builder[(A,B),scala.concurrent.stm.TMap[A,B]]", "kind" : "def"}, {"label" : "empty", "tail" : "(): TMap[A, B]", "member" : "scala.concurrent.stm.TMap.empty", "link" : "scala\/concurrent\/stm\/TMap$.html#empty[A,B]:scala.concurrent.stm.TMap[A,B]", "kind" : "def"}, {"label" : "View", "tail" : "", "member" : "scala.concurrent.stm.TMap.View", "link" : "scala\/concurrent\/stm\/TMap$.html#View[A,B]extendsMap[A,B]withMapLike[A,B,scala.concurrent.stm.TMap.View[A,B]]withTxnDebuggable", "kind" : "trait"}, {"label" : "View", "tail" : "", "member" : "scala.concurrent.stm.TMap.View", "link" : "scala\/concurrent\/stm\/TMap$.html#View", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/TMap$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/TMap$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/TMap$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/TMap$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/TMap$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/TMap$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/TMap$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/TMap$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/TMap$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/TMap$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/TMap$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/TMap$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/TMap$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/TMap$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/TMap$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/TMap$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/TMap$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/TMap$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/TMap$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scala\/concurrent\/stm\/TMap.html", "kind" : "object"}, {"name" : "scala.concurrent.stm.TSet", "members_trait" : [{"label" : "--=", "tail" : "(xs: TraversableOnce[A])(txn: InTxn): TSet.this.type", "member" : "scala.concurrent.stm.TSet.--=", "link" : "scala\/concurrent\/stm\/TSet.html#--=(xs:TraversableOnce[A])(implicittxn:scala.concurrent.stm.InTxn):TSet.this.type", "kind" : "def"}, {"label" : "-=", "tail" : "(x1: A, x2: A, xs: A*)(txn: InTxn): TSet.this.type", "member" : "scala.concurrent.stm.TSet.-=", "link" : "scala\/concurrent\/stm\/TSet.html#-=(x1:A,x2:A,xs:A*)(implicittxn:scala.concurrent.stm.InTxn):TSet.this.type", "kind" : "def"}, {"label" : "-=", "tail" : "(x: A)(txn: InTxn): TSet.this.type", "member" : "scala.concurrent.stm.TSet.-=", "link" : "scala\/concurrent\/stm\/TSet.html#-=(x:A)(implicittxn:scala.concurrent.stm.InTxn):TSet.this.type", "kind" : "def"}, {"label" : "++=", "tail" : "(xs: TraversableOnce[A])(txn: InTxn): TSet.this.type", "member" : "scala.concurrent.stm.TSet.++=", "link" : "scala\/concurrent\/stm\/TSet.html#++=(xs:TraversableOnce[A])(implicittxn:scala.concurrent.stm.InTxn):TSet.this.type", "kind" : "def"}, {"label" : "+=", "tail" : "(x1: A, x2: A, xs: A*)(txn: InTxn): TSet.this.type", "member" : "scala.concurrent.stm.TSet.+=", "link" : "scala\/concurrent\/stm\/TSet.html#+=(x1:A,x2:A,xs:A*)(implicittxn:scala.concurrent.stm.InTxn):TSet.this.type", "kind" : "def"}, {"label" : "+=", "tail" : "(x: A)(txn: InTxn): TSet.this.type", "member" : "scala.concurrent.stm.TSet.+=", "link" : "scala\/concurrent\/stm\/TSet.html#+=(x:A)(implicittxn:scala.concurrent.stm.InTxn):TSet.this.type", "kind" : "def"}, {"label" : "update", "tail" : "(elem: A, included: Boolean)(txn: InTxn): Unit", "member" : "scala.concurrent.stm.TSet.update", "link" : "scala\/concurrent\/stm\/TSet.html#update(elem:A,included:Boolean)(implicittxn:scala.concurrent.stm.InTxn):Unit", "kind" : "def"}, {"label" : "apply", "tail" : "(elem: A)(txn: InTxn): Boolean", "member" : "scala.concurrent.stm.TSet.apply", "link" : "scala\/concurrent\/stm\/TSet.html#apply(elem:A)(implicittxn:scala.concurrent.stm.InTxn):Boolean", "kind" : "def"}, {"label" : "snapshot", "tail" : "(): Set[A]", "member" : "scala.concurrent.stm.TSet.snapshot", "link" : "scala\/concurrent\/stm\/TSet.html#snapshot:scala.collection.immutable.Set[A]", "kind" : "def"}, {"label" : "clone", "tail" : "(txn: InTxn): TSet[A]", "member" : "scala.concurrent.stm.TSet.clone", "link" : "scala\/concurrent\/stm\/TSet.html#clone(implicittxn:scala.concurrent.stm.InTxn):scala.concurrent.stm.TSet[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/TSet.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/TSet.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/TSet.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/TSet.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/TSet.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/TSet.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/TSet.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/TSet.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/TSet.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/TSet.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/TSet.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/TSet.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/TSet.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/TSet.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/TSet.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/TSet.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/TSet.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/TSet.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/TSet.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "retain", "tail" : "(p: (A) ⇒ Boolean)(txn: InTxn): TSet.this.type", "member" : "scala.concurrent.stm.TSet.retain", "link" : "scala\/concurrent\/stm\/TSet.html#retain(p:A=>Boolean)(implicittxn:scala.concurrent.stm.InTxn):TSet.this.type", "kind" : "abstract def"}, {"label" : "remove", "tail" : "(elem: A)(txn: InTxn): Boolean", "member" : "scala.concurrent.stm.TSet.remove", "link" : "scala\/concurrent\/stm\/TSet.html#remove(elem:A)(implicittxn:scala.concurrent.stm.InTxn):Boolean", "kind" : "abstract def"}, {"label" : "add", "tail" : "(elem: A)(txn: InTxn): Boolean", "member" : "scala.concurrent.stm.TSet.add", "link" : "scala\/concurrent\/stm\/TSet.html#add(elem:A)(implicittxn:scala.concurrent.stm.InTxn):Boolean", "kind" : "abstract def"}, {"label" : "contains", "tail" : "(elem: A)(txn: InTxn): Boolean", "member" : "scala.concurrent.stm.TSet.contains", "link" : "scala\/concurrent\/stm\/TSet.html#contains(elem:A)(implicittxn:scala.concurrent.stm.InTxn):Boolean", "kind" : "abstract def"}, {"label" : "foreach", "tail" : "(f: (A) ⇒ U)(txn: InTxn): Unit", "member" : "scala.concurrent.stm.TSet.foreach", "link" : "scala\/concurrent\/stm\/TSet.html#foreach[U](f:A=>U)(implicittxn:scala.concurrent.stm.InTxn):Unit", "kind" : "abstract def"}, {"label" : "size", "tail" : "(txn: InTxn): Int", "member" : "scala.concurrent.stm.TSet.size", "link" : "scala\/concurrent\/stm\/TSet.html#size(implicittxn:scala.concurrent.stm.InTxn):Int", "kind" : "abstract def"}, {"label" : "isEmpty", "tail" : "(txn: InTxn): Boolean", "member" : "scala.concurrent.stm.TSet.isEmpty", "link" : "scala\/concurrent\/stm\/TSet.html#isEmpty(implicittxn:scala.concurrent.stm.InTxn):Boolean", "kind" : "abstract def"}, {"label" : "single", "tail" : "(): View[A]", "member" : "scala.concurrent.stm.TSet.single", "link" : "scala\/concurrent\/stm\/TSet.html#single:scala.concurrent.stm.TSet.View[A]", "kind" : "abstract def"}, {"label" : "dbgValue", "tail" : "(): Any", "member" : "scala.concurrent.stm.TxnDebuggable.dbgValue", "link" : "scala\/concurrent\/stm\/TSet.html#dbgValue:Any", "kind" : "abstract def"}, {"label" : "dbgStr", "tail" : "(): String", "member" : "scala.concurrent.stm.TxnDebuggable.dbgStr", "link" : "scala\/concurrent\/stm\/TSet.html#dbgStr:String", "kind" : "abstract def"}], "shortDescription" : "", "object" : "scala\/concurrent\/stm\/TSet$.html", "members_object" : [{"label" : "asSet", "tail" : "(s: TSet[A])(txn: InTxn): View[A]", "member" : "scala.concurrent.stm.TSet.asSet", "link" : "scala\/concurrent\/stm\/TSet$.html#asSet[A](s:scala.concurrent.stm.TSet[A])(implicittxn:scala.concurrent.stm.InTxn):scala.concurrent.stm.TSet.View[A]", "kind" : "implicit def"}, {"label" : "apply", "tail" : "(xs: A*): TSet[A]", "member" : "scala.concurrent.stm.TSet.apply", "link" : "scala\/concurrent\/stm\/TSet$.html#apply[A](xs:A*):scala.concurrent.stm.TSet[A]", "kind" : "def"}, {"label" : "newBuilder", "tail" : "(): Builder[A, TSet[A]]", "member" : "scala.concurrent.stm.TSet.newBuilder", "link" : "scala\/concurrent\/stm\/TSet$.html#newBuilder[A]:scala.collection.mutable.Builder[A,scala.concurrent.stm.TSet[A]]", "kind" : "def"}, {"label" : "empty", "tail" : "(): TSet[A]", "member" : "scala.concurrent.stm.TSet.empty", "link" : "scala\/concurrent\/stm\/TSet$.html#empty[A]:scala.concurrent.stm.TSet[A]", "kind" : "def"}, {"label" : "View", "tail" : "", "member" : "scala.concurrent.stm.TSet.View", "link" : "scala\/concurrent\/stm\/TSet$.html#View[A]extendsSet[A]withSetLike[A,scala.concurrent.stm.TSet.View[A]]withTxnDebuggable", "kind" : "trait"}, {"label" : "View", "tail" : "", "member" : "scala.concurrent.stm.TSet.View", "link" : "scala\/concurrent\/stm\/TSet$.html#View", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/TSet$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/TSet$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/TSet$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/TSet$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/TSet$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/TSet$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/TSet$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/TSet$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/TSet$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/TSet$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/TSet$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/TSet$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/TSet$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/TSet$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/TSet$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/TSet$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/TSet$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/TSet$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/TSet$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scala\/concurrent\/stm\/TSet.html", "kind" : "object"}, {"name" : "scala.concurrent.stm.Txn", "shortDescription" : "The Txn object provides methods that operate on the current transaction context.", "object" : "scala\/concurrent\/stm\/Txn$.html", "members_object" : [{"label" : "setExternalDecider", "tail" : "(decider: ExternalDecider)(txn: InTxnEnd): Unit", "member" : "scala.concurrent.stm.Txn.setExternalDecider", "link" : "scala\/concurrent\/stm\/Txn$.html#setExternalDecider(decider:scala.concurrent.stm.Txn.ExternalDecider)(implicittxn:scala.concurrent.stm.InTxnEnd):Unit", "kind" : "def"}, {"label" : "ExternalDecider", "tail" : "", "member" : "scala.concurrent.stm.Txn.ExternalDecider", "link" : "scala\/concurrent\/stm\/Txn$.html#ExternalDeciderextendsAnyRef", "kind" : "trait"}, {"label" : "afterCompletion", "tail" : "(handler: (Status) ⇒ Unit)(txn: InTxnEnd): Unit", "member" : "scala.concurrent.stm.Txn.afterCompletion", "link" : "scala\/concurrent\/stm\/Txn$.html#afterCompletion(handler:scala.concurrent.stm.Txn.Status=>Unit)(implicittxn:scala.concurrent.stm.InTxnEnd):Unit", "kind" : "def"}, {"label" : "afterRollback", "tail" : "(handler: (Status) ⇒ Unit)(txn: InTxnEnd): Unit", "member" : "scala.concurrent.stm.Txn.afterRollback", "link" : "scala\/concurrent\/stm\/Txn$.html#afterRollback(handler:scala.concurrent.stm.Txn.Status=>Unit)(implicittxn:scala.concurrent.stm.InTxnEnd):Unit", "kind" : "def"}, {"label" : "afterCommit", "tail" : "(handler: (Status) ⇒ Unit)(txn: InTxnEnd): Unit", "member" : "scala.concurrent.stm.Txn.afterCommit", "link" : "scala\/concurrent\/stm\/Txn$.html#afterCommit(handler:scala.concurrent.stm.Txn.Status=>Unit)(implicittxn:scala.concurrent.stm.InTxnEnd):Unit", "kind" : "def"}, {"label" : "whileCommitting", "tail" : "(handler: (InTxnEnd) ⇒ Unit)(txn: InTxnEnd): Unit", "member" : "scala.concurrent.stm.Txn.whileCommitting", "link" : "scala\/concurrent\/stm\/Txn$.html#whileCommitting(handler:scala.concurrent.stm.InTxnEnd=>Unit)(implicittxn:scala.concurrent.stm.InTxnEnd):Unit", "kind" : "def"}, {"label" : "whilePreparing", "tail" : "(handler: (InTxnEnd) ⇒ Unit)(txn: InTxnEnd): Unit", "member" : "scala.concurrent.stm.Txn.whilePreparing", "link" : "scala\/concurrent\/stm\/Txn$.html#whilePreparing(handler:scala.concurrent.stm.InTxnEnd=>Unit)(implicittxn:scala.concurrent.stm.InTxnEnd):Unit", "kind" : "def"}, {"label" : "beforeCommit", "tail" : "(handler: (InTxn) ⇒ Unit)(txn: InTxn): Unit", "member" : "scala.concurrent.stm.Txn.beforeCommit", "link" : "scala\/concurrent\/stm\/Txn$.html#beforeCommit(handler:scala.concurrent.stm.InTxn=>Unit)(implicittxn:scala.concurrent.stm.InTxn):Unit", "kind" : "def"}, {"label" : "rollback", "tail" : "(cause: RollbackCause)(txn: InTxnEnd): Nothing", "member" : "scala.concurrent.stm.Txn.rollback", "link" : "scala\/concurrent\/stm\/Txn$.html#rollback(cause:scala.concurrent.stm.Txn.RollbackCause)(implicittxn:scala.concurrent.stm.InTxnEnd):Nothing", "kind" : "def"}, {"label" : "retryFor", "tail" : "(timeout: Long, unit: TimeUnit)(txn: InTxn): Unit", "member" : "scala.concurrent.stm.Txn.retryFor", "link" : "scala\/concurrent\/stm\/Txn$.html#retryFor(timeout:Long,unit:java.util.concurrent.TimeUnit)(implicittxn:scala.concurrent.stm.InTxn):Unit", "kind" : "def"}, {"label" : "retry", "tail" : "(txn: InTxn): Nothing", "member" : "scala.concurrent.stm.Txn.retry", "link" : "scala\/concurrent\/stm\/Txn$.html#retry(implicittxn:scala.concurrent.stm.InTxn):Nothing", "kind" : "def"}, {"label" : "status", "tail" : "(txn: InTxnEnd): Status", "member" : "scala.concurrent.stm.Txn.status", "link" : "scala\/concurrent\/stm\/Txn$.html#status(implicittxn:scala.concurrent.stm.InTxnEnd):scala.concurrent.stm.Txn.Status", "kind" : "def"}, {"label" : "UnrecordedTxnCause", "tail" : "", "member" : "scala.concurrent.stm.Txn.UnrecordedTxnCause", "link" : "scala\/concurrent\/stm\/Txn$.html#UnrecordedTxnCause[Z]extendsTxn.PermanentRollbackCausewithProductwithSerializable", "kind" : "case class"}, {"label" : "UncaughtExceptionCause", "tail" : "", "member" : "scala.concurrent.stm.Txn.UncaughtExceptionCause", "link" : "scala\/concurrent\/stm\/Txn$.html#UncaughtExceptionCauseextendsTxn.PermanentRollbackCausewithProductwithSerializable", "kind" : "case class"}, {"label" : "ExplicitRetryCause", "tail" : "", "member" : "scala.concurrent.stm.Txn.ExplicitRetryCause", "link" : "scala\/concurrent\/stm\/Txn$.html#ExplicitRetryCauseextendsTxn.TransientRollbackCausewithProductwithSerializable", "kind" : "case class"}, {"label" : "OptimisticFailureCause", "tail" : "", "member" : "scala.concurrent.stm.Txn.OptimisticFailureCause", "link" : "scala\/concurrent\/stm\/Txn$.html#OptimisticFailureCauseextendsTxn.TransientRollbackCausewithProductwithSerializable", "kind" : "case class"}, {"label" : "PermanentRollbackCause", "tail" : "", "member" : "scala.concurrent.stm.Txn.PermanentRollbackCause", "link" : "scala\/concurrent\/stm\/Txn$.html#PermanentRollbackCauseextendsTxn.RollbackCause", "kind" : "sealed abstract class"}, {"label" : "TransientRollbackCause", "tail" : "", "member" : "scala.concurrent.stm.Txn.TransientRollbackCause", "link" : "scala\/concurrent\/stm\/Txn$.html#TransientRollbackCauseextendsTxn.RollbackCause", "kind" : "sealed abstract class"}, {"label" : "RollbackCause", "tail" : "", "member" : "scala.concurrent.stm.Txn.RollbackCause", "link" : "scala\/concurrent\/stm\/Txn$.html#RollbackCauseextendsAnyRef", "kind" : "sealed abstract class"}, {"label" : "RolledBack", "tail" : "", "member" : "scala.concurrent.stm.Txn.RolledBack", "link" : "scala\/concurrent\/stm\/Txn$.html#RolledBackextendsTxn.StatuswithProductwithSerializable", "kind" : "case class"}, {"label" : "Committed", "tail" : "", "member" : "scala.concurrent.stm.Txn.Committed", "link" : "scala\/concurrent\/stm\/Txn$.html#Committed", "kind" : "object"}, {"label" : "Committing", "tail" : "", "member" : "scala.concurrent.stm.Txn.Committing", "link" : "scala\/concurrent\/stm\/Txn$.html#Committing", "kind" : "object"}, {"label" : "Prepared", "tail" : "", "member" : "scala.concurrent.stm.Txn.Prepared", "link" : "scala\/concurrent\/stm\/Txn$.html#Prepared", "kind" : "object"}, {"label" : "Preparing", "tail" : "", "member" : "scala.concurrent.stm.Txn.Preparing", "link" : "scala\/concurrent\/stm\/Txn$.html#Preparing", "kind" : "object"}, {"label" : "Active", "tail" : "", "member" : "scala.concurrent.stm.Txn.Active", "link" : "scala\/concurrent\/stm\/Txn$.html#Active", "kind" : "object"}, {"label" : "Status", "tail" : "", "member" : "scala.concurrent.stm.Txn.Status", "link" : "scala\/concurrent\/stm\/Txn$.html#StatusextendsAnyRef", "kind" : "sealed abstract class"}, {"label" : "findCurrent", "tail" : "(mt: MaybeTxn): Option[InTxn]", "member" : "scala.concurrent.stm.Txn.findCurrent", "link" : "scala\/concurrent\/stm\/Txn$.html#findCurrent(implicitmt:scala.concurrent.stm.MaybeTxn):Option[scala.concurrent.stm.InTxn]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/Txn$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/Txn$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/Txn$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/Txn$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/Txn$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/Txn$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/Txn$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/Txn$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/Txn$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/Txn$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/Txn$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/Txn$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/Txn$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/Txn$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/Txn$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/Txn$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/Txn$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/Txn$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/Txn$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scala.concurrent.stm.TxnDebuggable", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/TxnDebuggable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/TxnDebuggable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/TxnDebuggable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/TxnDebuggable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/TxnDebuggable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/TxnDebuggable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/TxnDebuggable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/TxnDebuggable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/TxnDebuggable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/TxnDebuggable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/TxnDebuggable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/TxnDebuggable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/TxnDebuggable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/TxnDebuggable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/TxnDebuggable.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/TxnDebuggable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/TxnDebuggable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/TxnDebuggable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/TxnDebuggable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "dbgValue", "tail" : "(): Any", "member" : "scala.concurrent.stm.TxnDebuggable.dbgValue", "link" : "scala\/concurrent\/stm\/TxnDebuggable.html#dbgValue:Any", "kind" : "abstract def"}, {"label" : "dbgStr", "tail" : "(): String", "member" : "scala.concurrent.stm.TxnDebuggable.dbgStr", "link" : "scala\/concurrent\/stm\/TxnDebuggable.html#dbgStr:String", "kind" : "abstract def"}], "shortDescription" : "This trait implements methods that can be used to examine the content of transactional data structures in a debugger with minimal modification to the behavior of the program.", "trait" : "scala\/concurrent\/stm\/TxnDebuggable.html", "kind" : "trait"}, {"name" : "scala.concurrent.stm.TxnExecutor", "members_trait" : [{"label" : "withRetryTimeout", "tail" : "(timeout: Long, unit: TimeUnit): TxnExecutor", "member" : "scala.concurrent.stm.TxnExecutor.withRetryTimeout", "link" : "scala\/concurrent\/stm\/TxnExecutor.html#withRetryTimeout(timeout:Long,unit:java.util.concurrent.TimeUnit):scala.concurrent.stm.TxnExecutor", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/TxnExecutor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/TxnExecutor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/TxnExecutor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/TxnExecutor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/TxnExecutor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/TxnExecutor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/TxnExecutor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/TxnExecutor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/TxnExecutor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/TxnExecutor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/TxnExecutor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/TxnExecutor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/TxnExecutor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/TxnExecutor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/TxnExecutor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/TxnExecutor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/TxnExecutor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/TxnExecutor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/TxnExecutor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "withPostDecisionFailureHandler", "tail" : "(handler: (Status, Throwable) ⇒ Unit): TxnExecutor", "member" : "scala.concurrent.stm.TxnExecutor.withPostDecisionFailureHandler", "link" : "scala\/concurrent\/stm\/TxnExecutor.html#withPostDecisionFailureHandler(handler:(scala.concurrent.stm.Txn.Status,Throwable)=>Unit):scala.concurrent.stm.TxnExecutor", "kind" : "abstract def"}, {"label" : "postDecisionFailureHandler", "tail" : "(): (Status, Throwable) ⇒ Unit", "member" : "scala.concurrent.stm.TxnExecutor.postDecisionFailureHandler", "link" : "scala\/concurrent\/stm\/TxnExecutor.html#postDecisionFailureHandler:(scala.concurrent.stm.Txn.Status,Throwable)=>Unit", "kind" : "abstract def"}, {"label" : "withControlFlowRecognizer", "tail" : "(pf: PartialFunction[Throwable, Boolean]): TxnExecutor", "member" : "scala.concurrent.stm.TxnExecutor.withControlFlowRecognizer", "link" : "scala\/concurrent\/stm\/TxnExecutor.html#withControlFlowRecognizer(pf:PartialFunction[Throwable,Boolean]):scala.concurrent.stm.TxnExecutor", "kind" : "abstract def"}, {"label" : "isControlFlow", "tail" : "(x: Throwable): Boolean", "member" : "scala.concurrent.stm.TxnExecutor.isControlFlow", "link" : "scala\/concurrent\/stm\/TxnExecutor.html#isControlFlow(x:Throwable):Boolean", "kind" : "abstract def"}, {"label" : "withRetryTimeoutNanos", "tail" : "(timeoutNanos: Option[Long]): TxnExecutor", "member" : "scala.concurrent.stm.TxnExecutor.withRetryTimeoutNanos", "link" : "scala\/concurrent\/stm\/TxnExecutor.html#withRetryTimeoutNanos(timeoutNanos:Option[Long]):scala.concurrent.stm.TxnExecutor", "kind" : "abstract def"}, {"label" : "retryTimeoutNanos", "tail" : "(): Option[Long]", "member" : "scala.concurrent.stm.TxnExecutor.retryTimeoutNanos", "link" : "scala\/concurrent\/stm\/TxnExecutor.html#retryTimeoutNanos:Option[Long]", "kind" : "abstract def"}, {"label" : "compareAndSetIdentity", "tail" : "(a: Ref[A], a0: A, a1: A, b: Ref[B], b0: B, b1: B): Boolean", "member" : "scala.concurrent.stm.TxnExecutor.compareAndSetIdentity", "link" : "scala\/concurrent\/stm\/TxnExecutor.html#compareAndSetIdentity[A<:AnyRef,B<:AnyRef](a:scala.concurrent.stm.Ref[A],a0:A,a1:A,b:scala.concurrent.stm.Ref[B],b0:B,b1:B):Boolean", "kind" : "abstract def"}, {"label" : "compareAndSet", "tail" : "(a: Ref[A], a0: A, a1: A, b: Ref[B], b0: B, b1: B): Boolean", "member" : "scala.concurrent.stm.TxnExecutor.compareAndSet", "link" : "scala\/concurrent\/stm\/TxnExecutor.html#compareAndSet[A,B](a:scala.concurrent.stm.Ref[A],a0:A,a1:A,b:scala.concurrent.stm.Ref[B],b0:B,b1:B):Boolean", "kind" : "abstract def"}, {"label" : "pushAlternative", "tail" : "(mt: MaybeTxn, block: (InTxn) ⇒ Z): Boolean", "member" : "scala.concurrent.stm.TxnExecutor.pushAlternative", "link" : "scala\/concurrent\/stm\/TxnExecutor.html#pushAlternative[Z](mt:scala.concurrent.stm.MaybeTxn,block:scala.concurrent.stm.InTxn=>Z):Boolean", "kind" : "abstract def"}, {"label" : "unrecorded", "tail" : "(block: (InTxn) ⇒ Z, outerFailure: (RollbackCause) ⇒ Z)(mt: MaybeTxn): Z", "member" : "scala.concurrent.stm.TxnExecutor.unrecorded", "link" : "scala\/concurrent\/stm\/TxnExecutor.html#unrecorded[Z](block:scala.concurrent.stm.InTxn=>Z,outerFailure:concurrent.stm.Txn.RollbackCause=>Z)(implicitmt:scala.concurrent.stm.MaybeTxn):Z", "kind" : "abstract def"}, {"label" : "oneOf", "tail" : "(blocks: (InTxn) ⇒ Z*)(mt: MaybeTxn): Z", "member" : "scala.concurrent.stm.TxnExecutor.oneOf", "link" : "scala\/concurrent\/stm\/TxnExecutor.html#oneOf[Z](blocks:scala.concurrent.stm.InTxn=>Z*)(implicitmt:scala.concurrent.stm.MaybeTxn):Z", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(block: (InTxn) ⇒ Z)(mt: MaybeTxn): Z", "member" : "scala.concurrent.stm.TxnExecutor.apply", "link" : "scala\/concurrent\/stm\/TxnExecutor.html#apply[Z](block:scala.concurrent.stm.InTxn=>Z)(implicitmt:scala.concurrent.stm.MaybeTxn):Z", "kind" : "abstract def"}], "shortDescription" : "object TxnExecutor manages the system-wide default TxnExecutor.", "object" : "scala\/concurrent\/stm\/TxnExecutor$.html", "members_object" : [{"label" : "DefaultPostDecisionExceptionHandler", "tail" : ": (Status, Throwable) ⇒ Nothing", "member" : "scala.concurrent.stm.TxnExecutor.DefaultPostDecisionExceptionHandler", "link" : "scala\/concurrent\/stm\/TxnExecutor$.html#DefaultPostDecisionExceptionHandler:(scala.concurrent.stm.Txn.Status,Throwable)=>Nothing", "kind" : "val"}, {"label" : "transformDefault", "tail" : "(f: (TxnExecutor) ⇒ TxnExecutor): Unit", "member" : "scala.concurrent.stm.TxnExecutor.transformDefault", "link" : "scala\/concurrent\/stm\/TxnExecutor$.html#transformDefault(f:scala.concurrent.stm.TxnExecutor=>scala.concurrent.stm.TxnExecutor):Unit", "kind" : "def"}, {"label" : "defaultAtomic", "tail" : "(): TxnExecutor", "member" : "scala.concurrent.stm.TxnExecutor.defaultAtomic", "link" : "scala\/concurrent\/stm\/TxnExecutor$.html#defaultAtomic:scala.concurrent.stm.TxnExecutor", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/TxnExecutor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/TxnExecutor$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/TxnExecutor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/TxnExecutor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/TxnExecutor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/TxnExecutor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/TxnExecutor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/TxnExecutor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/TxnExecutor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/TxnExecutor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/TxnExecutor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/TxnExecutor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/TxnExecutor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/TxnExecutor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/TxnExecutor$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/TxnExecutor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/TxnExecutor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/TxnExecutor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/TxnExecutor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scala\/concurrent\/stm\/TxnExecutor.html", "kind" : "object"}, {"name" : "scala.concurrent.stm.TxnLocal", "members_trait" : [{"label" : "\/=", "tail" : "(rhs: A)(txn: InTxnEnd, num: Numeric[A]): Unit", "member" : "scala.concurrent.stm.RefLike.\/=", "link" : "scala\/concurrent\/stm\/TxnLocal.html#\/=(rhs:A)(implicittxn:Context,implicitnum:Numeric[A]):Unit", "kind" : "def"}, {"label" : "*=", "tail" : "(rhs: A)(txn: InTxnEnd, num: Numeric[A]): Unit", "member" : "scala.concurrent.stm.RefLike.*=", "link" : "scala\/concurrent\/stm\/TxnLocal.html#*=(rhs:A)(implicittxn:Context,implicitnum:Numeric[A]):Unit", "kind" : "def"}, {"label" : "-=", "tail" : "(rhs: A)(txn: InTxnEnd, num: Numeric[A]): Unit", "member" : "scala.concurrent.stm.RefLike.-=", "link" : "scala\/concurrent\/stm\/TxnLocal.html#-=(rhs:A)(implicittxn:Context,implicitnum:Numeric[A]):Unit", "kind" : "def"}, {"label" : "+=", "tail" : "(rhs: A)(txn: InTxnEnd, num: Numeric[A]): Unit", "member" : "scala.concurrent.stm.RefLike.+=", "link" : "scala\/concurrent\/stm\/TxnLocal.html#+=(rhs:A)(implicittxn:Context,implicitnum:Numeric[A]):Unit", "kind" : "def"}, {"label" : "transformAndExtract", "tail" : "(f: (A) ⇒ (A, B))(txn: InTxnEnd): B", "member" : "scala.concurrent.stm.RefLike.transformAndExtract", "link" : "scala\/concurrent\/stm\/TxnLocal.html#transformAndExtract[B](f:A=>(A,B))(implicittxn:Context):B", "kind" : "def"}, {"label" : "getAndTransform", "tail" : "(f: (A) ⇒ A)(txn: InTxnEnd): A", "member" : "scala.concurrent.stm.RefLike.getAndTransform", "link" : "scala\/concurrent\/stm\/TxnLocal.html#getAndTransform(f:A=>A)(implicittxn:Context):A", "kind" : "def"}, {"label" : "transformAndGet", "tail" : "(f: (A) ⇒ A)(txn: InTxnEnd): A", "member" : "scala.concurrent.stm.RefLike.transformAndGet", "link" : "scala\/concurrent\/stm\/TxnLocal.html#transformAndGet(f:A=>A)(implicittxn:Context):A", "kind" : "def"}, {"label" : "update", "tail" : "(v: A)(txn: InTxnEnd): Unit", "member" : "scala.concurrent.stm.SinkLike.update", "link" : "scala\/concurrent\/stm\/TxnLocal.html#update(v:A)(implicittxn:Context):Unit", "kind" : "def"}, {"label" : "apply", "tail" : "()(txn: InTxnEnd): A", "member" : "scala.concurrent.stm.SourceLike.apply", "link" : "scala\/concurrent\/stm\/TxnLocal.html#apply()(implicittxn:Context):A", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/TxnLocal.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/TxnLocal.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/TxnLocal.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/TxnLocal.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/TxnLocal.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/TxnLocal.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/TxnLocal.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/TxnLocal.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/TxnLocal.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/TxnLocal.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/TxnLocal.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/TxnLocal.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/TxnLocal.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/TxnLocal.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/TxnLocal.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/TxnLocal.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/TxnLocal.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/TxnLocal.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/TxnLocal.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "isInitialized", "tail" : "(txn: InTxnEnd): Boolean", "member" : "scala.concurrent.stm.TxnLocal.isInitialized", "link" : "scala\/concurrent\/stm\/TxnLocal.html#isInitialized(implicittxn:scala.concurrent.stm.InTxnEnd):Boolean", "kind" : "abstract def"}, {"label" : "transformIfDefined", "tail" : "(pf: PartialFunction[A, A])(txn: InTxnEnd): Boolean", "member" : "scala.concurrent.stm.RefLike.transformIfDefined", "link" : "scala\/concurrent\/stm\/TxnLocal.html#transformIfDefined(pf:PartialFunction[A,A])(implicittxn:Context):Boolean", "kind" : "abstract def"}, {"label" : "transform", "tail" : "(f: (A) ⇒ A)(txn: InTxnEnd): Unit", "member" : "scala.concurrent.stm.RefLike.transform", "link" : "scala\/concurrent\/stm\/TxnLocal.html#transform(f:A=>A)(implicittxn:Context):Unit", "kind" : "abstract def"}, {"label" : "swap", "tail" : "(v: A)(txn: InTxnEnd): A", "member" : "scala.concurrent.stm.RefLike.swap", "link" : "scala\/concurrent\/stm\/TxnLocal.html#swap(v:A)(implicittxn:Context):A", "kind" : "abstract def"}, {"label" : "trySet", "tail" : "(v: A)(txn: InTxnEnd): Boolean", "member" : "scala.concurrent.stm.SinkLike.trySet", "link" : "scala\/concurrent\/stm\/TxnLocal.html#trySet(v:A)(implicittxn:Context):Boolean", "kind" : "abstract def"}, {"label" : "set", "tail" : "(v: A)(txn: InTxnEnd): Unit", "member" : "scala.concurrent.stm.SinkLike.set", "link" : "scala\/concurrent\/stm\/TxnLocal.html#set(v:A)(implicittxn:Context):Unit", "kind" : "abstract def"}, {"label" : "relaxedGet", "tail" : "(equiv: (A, A) ⇒ Boolean)(txn: InTxnEnd): A", "member" : "scala.concurrent.stm.SourceLike.relaxedGet", "link" : "scala\/concurrent\/stm\/TxnLocal.html#relaxedGet(equiv:(A,A)=>Boolean)(implicittxn:Context):A", "kind" : "abstract def"}, {"label" : "getWith", "tail" : "(f: (A) ⇒ Z)(txn: InTxnEnd): Z", "member" : "scala.concurrent.stm.SourceLike.getWith", "link" : "scala\/concurrent\/stm\/TxnLocal.html#getWith[Z](f:A=>Z)(implicittxn:Context):Z", "kind" : "abstract def"}, {"label" : "get", "tail" : "(txn: InTxnEnd): A", "member" : "scala.concurrent.stm.SourceLike.get", "link" : "scala\/concurrent\/stm\/TxnLocal.html#get(implicittxn:Context):A", "kind" : "abstract def"}], "shortDescription" : "", "object" : "scala\/concurrent\/stm\/TxnLocal$.html", "members_object" : [{"label" : "apply", "tail" : "(init: ⇒ A, initialValue: (InTxn) ⇒ A, beforeCommit: (InTxn) ⇒ Unit, whilePreparing: (InTxnEnd) ⇒ Unit, whileCommitting: (InTxnEnd) ⇒ Unit, afterCommit: (A) ⇒ Unit, afterRollback: (Status) ⇒ Unit, afterCompletion: (Status) ⇒ Unit): TxnLocal[A]", "member" : "scala.concurrent.stm.TxnLocal.apply", "link" : "scala\/concurrent\/stm\/TxnLocal$.html#apply[A](init:=>A,initialValue:scala.concurrent.stm.InTxn=>A,beforeCommit:scala.concurrent.stm.InTxn=>Unit,whilePreparing:scala.concurrent.stm.InTxnEnd=>Unit,whileCommitting:scala.concurrent.stm.InTxnEnd=>Unit,afterCommit:A=>Unit,afterRollback:scala.concurrent.stm.Txn.Status=>Unit,afterCompletion:scala.concurrent.stm.Txn.Status=>Unit):scala.concurrent.stm.TxnLocal[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/TxnLocal$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/TxnLocal$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/TxnLocal$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/TxnLocal$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/TxnLocal$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/TxnLocal$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/TxnLocal$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/TxnLocal$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/TxnLocal$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/TxnLocal$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/TxnLocal$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/TxnLocal$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/TxnLocal$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/TxnLocal$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/TxnLocal$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/TxnLocal$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/TxnLocal$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/TxnLocal$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/TxnLocal$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scala\/concurrent\/stm\/TxnLocal.html", "kind" : "object"}, {"name" : "scala.concurrent.stm.TxnUnknown", "shortDescription" : "An object that represents the absence of a statically-bound current transaction.", "object" : "scala\/concurrent\/stm\/TxnUnknown$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/TxnUnknown$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/TxnUnknown$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/TxnUnknown$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/TxnUnknown$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/TxnUnknown$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/TxnUnknown$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/TxnUnknown$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/TxnUnknown$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/TxnUnknown$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/TxnUnknown$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/TxnUnknown$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/TxnUnknown$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/TxnUnknown$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/TxnUnknown$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/TxnUnknown$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/TxnUnknown$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/TxnUnknown$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/TxnUnknown$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/TxnUnknown$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "scala.concurrent.stm.impl" : [{"name" : "scala.concurrent.stm.impl.RefFactory", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/impl\/RefFactory.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/impl\/RefFactory.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/impl\/RefFactory.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/impl\/RefFactory.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/impl\/RefFactory.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/impl\/RefFactory.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/impl\/RefFactory.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/impl\/RefFactory.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/impl\/RefFactory.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/impl\/RefFactory.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/impl\/RefFactory.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/impl\/RefFactory.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/impl\/RefFactory.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/impl\/RefFactory.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/impl\/RefFactory.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/impl\/RefFactory.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/impl\/RefFactory.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/impl\/RefFactory.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/impl\/RefFactory.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "newTSetBuilder", "tail" : "(): Builder[A, TSet[A]]", "member" : "scala.concurrent.stm.impl.RefFactory.newTSetBuilder", "link" : "scala\/concurrent\/stm\/impl\/RefFactory.html#newTSetBuilder[A]:scala.collection.mutable.Builder[A,scala.concurrent.stm.TSet[A]]", "kind" : "abstract def"}, {"label" : "newTSet", "tail" : "(): TSet[A]", "member" : "scala.concurrent.stm.impl.RefFactory.newTSet", "link" : "scala\/concurrent\/stm\/impl\/RefFactory.html#newTSet[A]:scala.concurrent.stm.TSet[A]", "kind" : "abstract def"}, {"label" : "newTMapBuilder", "tail" : "(): Builder[(A, B), TMap[A, B]]", "member" : "scala.concurrent.stm.impl.RefFactory.newTMapBuilder", "link" : "scala\/concurrent\/stm\/impl\/RefFactory.html#newTMapBuilder[A,B]:scala.collection.mutable.Builder[(A,B),scala.concurrent.stm.TMap[A,B]]", "kind" : "abstract def"}, {"label" : "newTMap", "tail" : "(): TMap[A, B]", "member" : "scala.concurrent.stm.impl.RefFactory.newTMap", "link" : "scala\/concurrent\/stm\/impl\/RefFactory.html#newTMap[A,B]:scala.concurrent.stm.TMap[A,B]", "kind" : "abstract def"}, {"label" : "newTArray", "tail" : "(xs: TraversableOnce[A])(arg0: ClassManifest[A]): TArray[A]", "member" : "scala.concurrent.stm.impl.RefFactory.newTArray", "link" : "scala\/concurrent\/stm\/impl\/RefFactory.html#newTArray[A](xs:TraversableOnce[A])(implicitevidence$3:ClassManifest[A]):scala.concurrent.stm.TArray[A]", "kind" : "abstract def"}, {"label" : "newTArray", "tail" : "(length: Int)(arg0: ClassManifest[A]): TArray[A]", "member" : "scala.concurrent.stm.impl.RefFactory.newTArray", "link" : "scala\/concurrent\/stm\/impl\/RefFactory.html#newTArray[A](length:Int)(implicitevidence$2:ClassManifest[A]):scala.concurrent.stm.TArray[A]", "kind" : "abstract def"}, {"label" : "newTxnLocal", "tail" : "(init: ⇒ A, initialValue: (InTxn) ⇒ A, beforeCommit: (InTxn) ⇒ Unit, whilePreparing: (InTxnEnd) ⇒ Unit, whileCommitting: (InTxnEnd) ⇒ Unit, afterCommit: (A) ⇒ Unit, afterRollback: (Status) ⇒ Unit, afterCompletion: (Status) ⇒ Unit): TxnLocal[A]", "member" : "scala.concurrent.stm.impl.RefFactory.newTxnLocal", "link" : "scala\/concurrent\/stm\/impl\/RefFactory.html#newTxnLocal[A](init:=>A,initialValue:scala.concurrent.stm.InTxn=>A,beforeCommit:scala.concurrent.stm.InTxn=>Unit,whilePreparing:scala.concurrent.stm.InTxnEnd=>Unit,whileCommitting:scala.concurrent.stm.InTxnEnd=>Unit,afterCommit:A=>Unit,afterRollback:scala.concurrent.stm.Txn.Status=>Unit,afterCompletion:scala.concurrent.stm.Txn.Status=>Unit):scala.concurrent.stm.TxnLocal[A]", "kind" : "abstract def"}, {"label" : "newRef", "tail" : "(v0: A)(arg0: ClassManifest[A]): Ref[A]", "member" : "scala.concurrent.stm.impl.RefFactory.newRef", "link" : "scala\/concurrent\/stm\/impl\/RefFactory.html#newRef[A](v0:A)(implicitevidence$1:ClassManifest[A]):scala.concurrent.stm.Ref[A]", "kind" : "abstract def"}, {"label" : "newRef", "tail" : "(v0: Unit): Ref[Unit]", "member" : "scala.concurrent.stm.impl.RefFactory.newRef", "link" : "scala\/concurrent\/stm\/impl\/RefFactory.html#newRef(v0:Unit):scala.concurrent.stm.Ref[Unit]", "kind" : "abstract def"}, {"label" : "newRef", "tail" : "(v0: Double): Ref[Double]", "member" : "scala.concurrent.stm.impl.RefFactory.newRef", "link" : "scala\/concurrent\/stm\/impl\/RefFactory.html#newRef(v0:Double):scala.concurrent.stm.Ref[Double]", "kind" : "abstract def"}, {"label" : "newRef", "tail" : "(v0: Long): Ref[Long]", "member" : "scala.concurrent.stm.impl.RefFactory.newRef", "link" : "scala\/concurrent\/stm\/impl\/RefFactory.html#newRef(v0:Long):scala.concurrent.stm.Ref[Long]", "kind" : "abstract def"}, {"label" : "newRef", "tail" : "(v0: Float): Ref[Float]", "member" : "scala.concurrent.stm.impl.RefFactory.newRef", "link" : "scala\/concurrent\/stm\/impl\/RefFactory.html#newRef(v0:Float):scala.concurrent.stm.Ref[Float]", "kind" : "abstract def"}, {"label" : "newRef", "tail" : "(v0: Int): Ref[Int]", "member" : "scala.concurrent.stm.impl.RefFactory.newRef", "link" : "scala\/concurrent\/stm\/impl\/RefFactory.html#newRef(v0:Int):scala.concurrent.stm.Ref[Int]", "kind" : "abstract def"}, {"label" : "newRef", "tail" : "(v0: Char): Ref[Char]", "member" : "scala.concurrent.stm.impl.RefFactory.newRef", "link" : "scala\/concurrent\/stm\/impl\/RefFactory.html#newRef(v0:Char):scala.concurrent.stm.Ref[Char]", "kind" : "abstract def"}, {"label" : "newRef", "tail" : "(v0: Short): Ref[Short]", "member" : "scala.concurrent.stm.impl.RefFactory.newRef", "link" : "scala\/concurrent\/stm\/impl\/RefFactory.html#newRef(v0:Short):scala.concurrent.stm.Ref[Short]", "kind" : "abstract def"}, {"label" : "newRef", "tail" : "(v0: Byte): Ref[Byte]", "member" : "scala.concurrent.stm.impl.RefFactory.newRef", "link" : "scala\/concurrent\/stm\/impl\/RefFactory.html#newRef(v0:Byte):scala.concurrent.stm.Ref[Byte]", "kind" : "abstract def"}, {"label" : "newRef", "tail" : "(v0: Boolean): Ref[Boolean]", "member" : "scala.concurrent.stm.impl.RefFactory.newRef", "link" : "scala\/concurrent\/stm\/impl\/RefFactory.html#newRef(v0:Boolean):scala.concurrent.stm.Ref[Boolean]", "kind" : "abstract def"}], "shortDescription" : "RefFactory is responsible for creating concrete Ref instances.", "trait" : "scala\/concurrent\/stm\/impl\/RefFactory.html", "kind" : "trait"}, {"name" : "scala.concurrent.stm.impl.STMImpl", "members_trait" : [{"label" : "withRetryTimeout", "tail" : "(timeout: Long, unit: TimeUnit): TxnExecutor", "member" : "scala.concurrent.stm.TxnExecutor.withRetryTimeout", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#withRetryTimeout(timeout:Long,unit:java.util.concurrent.TimeUnit):scala.concurrent.stm.TxnExecutor", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "newCommitBarrier", "tail" : "(timeout: Long, unit: TimeUnit): CommitBarrier", "member" : "scala.concurrent.stm.impl.STMImpl.newCommitBarrier", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#newCommitBarrier(timeout:Long,unit:java.util.concurrent.TimeUnit):scala.concurrent.stm.CommitBarrier", "kind" : "abstract def"}, {"label" : "withPostDecisionFailureHandler", "tail" : "(handler: (Status, Throwable) ⇒ Unit): TxnExecutor", "member" : "scala.concurrent.stm.TxnExecutor.withPostDecisionFailureHandler", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#withPostDecisionFailureHandler(handler:(scala.concurrent.stm.Txn.Status,Throwable)=>Unit):scala.concurrent.stm.TxnExecutor", "kind" : "abstract def"}, {"label" : "postDecisionFailureHandler", "tail" : "(): (Status, Throwable) ⇒ Unit", "member" : "scala.concurrent.stm.TxnExecutor.postDecisionFailureHandler", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#postDecisionFailureHandler:(scala.concurrent.stm.Txn.Status,Throwable)=>Unit", "kind" : "abstract def"}, {"label" : "withControlFlowRecognizer", "tail" : "(pf: PartialFunction[Throwable, Boolean]): TxnExecutor", "member" : "scala.concurrent.stm.TxnExecutor.withControlFlowRecognizer", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#withControlFlowRecognizer(pf:PartialFunction[Throwable,Boolean]):scala.concurrent.stm.TxnExecutor", "kind" : "abstract def"}, {"label" : "isControlFlow", "tail" : "(x: Throwable): Boolean", "member" : "scala.concurrent.stm.TxnExecutor.isControlFlow", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#isControlFlow(x:Throwable):Boolean", "kind" : "abstract def"}, {"label" : "withRetryTimeoutNanos", "tail" : "(timeoutNanos: Option[Long]): TxnExecutor", "member" : "scala.concurrent.stm.TxnExecutor.withRetryTimeoutNanos", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#withRetryTimeoutNanos(timeoutNanos:Option[Long]):scala.concurrent.stm.TxnExecutor", "kind" : "abstract def"}, {"label" : "retryTimeoutNanos", "tail" : "(): Option[Long]", "member" : "scala.concurrent.stm.TxnExecutor.retryTimeoutNanos", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#retryTimeoutNanos:Option[Long]", "kind" : "abstract def"}, {"label" : "compareAndSetIdentity", "tail" : "(a: Ref[A], a0: A, a1: A, b: Ref[B], b0: B, b1: B): Boolean", "member" : "scala.concurrent.stm.TxnExecutor.compareAndSetIdentity", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#compareAndSetIdentity[A<:AnyRef,B<:AnyRef](a:scala.concurrent.stm.Ref[A],a0:A,a1:A,b:scala.concurrent.stm.Ref[B],b0:B,b1:B):Boolean", "kind" : "abstract def"}, {"label" : "compareAndSet", "tail" : "(a: Ref[A], a0: A, a1: A, b: Ref[B], b0: B, b1: B): Boolean", "member" : "scala.concurrent.stm.TxnExecutor.compareAndSet", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#compareAndSet[A,B](a:scala.concurrent.stm.Ref[A],a0:A,a1:A,b:scala.concurrent.stm.Ref[B],b0:B,b1:B):Boolean", "kind" : "abstract def"}, {"label" : "pushAlternative", "tail" : "(mt: MaybeTxn, block: (InTxn) ⇒ Z): Boolean", "member" : "scala.concurrent.stm.TxnExecutor.pushAlternative", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#pushAlternative[Z](mt:scala.concurrent.stm.MaybeTxn,block:scala.concurrent.stm.InTxn=>Z):Boolean", "kind" : "abstract def"}, {"label" : "unrecorded", "tail" : "(block: (InTxn) ⇒ Z, outerFailure: (RollbackCause) ⇒ Z)(mt: MaybeTxn): Z", "member" : "scala.concurrent.stm.TxnExecutor.unrecorded", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#unrecorded[Z](block:scala.concurrent.stm.InTxn=>Z,outerFailure:concurrent.stm.Txn.RollbackCause=>Z)(implicitmt:scala.concurrent.stm.MaybeTxn):Z", "kind" : "abstract def"}, {"label" : "oneOf", "tail" : "(blocks: (InTxn) ⇒ Z*)(mt: MaybeTxn): Z", "member" : "scala.concurrent.stm.TxnExecutor.oneOf", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#oneOf[Z](blocks:scala.concurrent.stm.InTxn=>Z*)(implicitmt:scala.concurrent.stm.MaybeTxn):Z", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(block: (InTxn) ⇒ Z)(mt: MaybeTxn): Z", "member" : "scala.concurrent.stm.TxnExecutor.apply", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#apply[Z](block:scala.concurrent.stm.InTxn=>Z)(implicitmt:scala.concurrent.stm.MaybeTxn):Z", "kind" : "abstract def"}, {"label" : "dynCurrentOrNull", "tail" : "(): InTxn", "member" : "scala.concurrent.stm.impl.TxnContext.dynCurrentOrNull", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#dynCurrentOrNull:scala.concurrent.stm.InTxn", "kind" : "abstract def"}, {"label" : "findCurrent", "tail" : "(mt: MaybeTxn): Option[InTxn]", "member" : "scala.concurrent.stm.impl.TxnContext.findCurrent", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#findCurrent(implicitmt:scala.concurrent.stm.MaybeTxn):Option[scala.concurrent.stm.InTxn]", "kind" : "abstract def"}, {"label" : "newTSetBuilder", "tail" : "(): Builder[A, TSet[A]]", "member" : "scala.concurrent.stm.impl.RefFactory.newTSetBuilder", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#newTSetBuilder[A]:scala.collection.mutable.Builder[A,scala.concurrent.stm.TSet[A]]", "kind" : "abstract def"}, {"label" : "newTSet", "tail" : "(): TSet[A]", "member" : "scala.concurrent.stm.impl.RefFactory.newTSet", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#newTSet[A]:scala.concurrent.stm.TSet[A]", "kind" : "abstract def"}, {"label" : "newTMapBuilder", "tail" : "(): Builder[(A, B), TMap[A, B]]", "member" : "scala.concurrent.stm.impl.RefFactory.newTMapBuilder", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#newTMapBuilder[A,B]:scala.collection.mutable.Builder[(A,B),scala.concurrent.stm.TMap[A,B]]", "kind" : "abstract def"}, {"label" : "newTMap", "tail" : "(): TMap[A, B]", "member" : "scala.concurrent.stm.impl.RefFactory.newTMap", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#newTMap[A,B]:scala.concurrent.stm.TMap[A,B]", "kind" : "abstract def"}, {"label" : "newTArray", "tail" : "(xs: TraversableOnce[A])(arg0: ClassManifest[A]): TArray[A]", "member" : "scala.concurrent.stm.impl.RefFactory.newTArray", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#newTArray[A](xs:TraversableOnce[A])(implicitevidence$3:ClassManifest[A]):scala.concurrent.stm.TArray[A]", "kind" : "abstract def"}, {"label" : "newTArray", "tail" : "(length: Int)(arg0: ClassManifest[A]): TArray[A]", "member" : "scala.concurrent.stm.impl.RefFactory.newTArray", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#newTArray[A](length:Int)(implicitevidence$2:ClassManifest[A]):scala.concurrent.stm.TArray[A]", "kind" : "abstract def"}, {"label" : "newTxnLocal", "tail" : "(init: ⇒ A, initialValue: (InTxn) ⇒ A, beforeCommit: (InTxn) ⇒ Unit, whilePreparing: (InTxnEnd) ⇒ Unit, whileCommitting: (InTxnEnd) ⇒ Unit, afterCommit: (A) ⇒ Unit, afterRollback: (Status) ⇒ Unit, afterCompletion: (Status) ⇒ Unit): TxnLocal[A]", "member" : "scala.concurrent.stm.impl.RefFactory.newTxnLocal", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#newTxnLocal[A](init:=>A,initialValue:scala.concurrent.stm.InTxn=>A,beforeCommit:scala.concurrent.stm.InTxn=>Unit,whilePreparing:scala.concurrent.stm.InTxnEnd=>Unit,whileCommitting:scala.concurrent.stm.InTxnEnd=>Unit,afterCommit:A=>Unit,afterRollback:scala.concurrent.stm.Txn.Status=>Unit,afterCompletion:scala.concurrent.stm.Txn.Status=>Unit):scala.concurrent.stm.TxnLocal[A]", "kind" : "abstract def"}, {"label" : "newRef", "tail" : "(v0: A)(arg0: ClassManifest[A]): Ref[A]", "member" : "scala.concurrent.stm.impl.RefFactory.newRef", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#newRef[A](v0:A)(implicitevidence$1:ClassManifest[A]):scala.concurrent.stm.Ref[A]", "kind" : "abstract def"}, {"label" : "newRef", "tail" : "(v0: Unit): Ref[Unit]", "member" : "scala.concurrent.stm.impl.RefFactory.newRef", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#newRef(v0:Unit):scala.concurrent.stm.Ref[Unit]", "kind" : "abstract def"}, {"label" : "newRef", "tail" : "(v0: Double): Ref[Double]", "member" : "scala.concurrent.stm.impl.RefFactory.newRef", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#newRef(v0:Double):scala.concurrent.stm.Ref[Double]", "kind" : "abstract def"}, {"label" : "newRef", "tail" : "(v0: Long): Ref[Long]", "member" : "scala.concurrent.stm.impl.RefFactory.newRef", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#newRef(v0:Long):scala.concurrent.stm.Ref[Long]", "kind" : "abstract def"}, {"label" : "newRef", "tail" : "(v0: Float): Ref[Float]", "member" : "scala.concurrent.stm.impl.RefFactory.newRef", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#newRef(v0:Float):scala.concurrent.stm.Ref[Float]", "kind" : "abstract def"}, {"label" : "newRef", "tail" : "(v0: Int): Ref[Int]", "member" : "scala.concurrent.stm.impl.RefFactory.newRef", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#newRef(v0:Int):scala.concurrent.stm.Ref[Int]", "kind" : "abstract def"}, {"label" : "newRef", "tail" : "(v0: Char): Ref[Char]", "member" : "scala.concurrent.stm.impl.RefFactory.newRef", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#newRef(v0:Char):scala.concurrent.stm.Ref[Char]", "kind" : "abstract def"}, {"label" : "newRef", "tail" : "(v0: Short): Ref[Short]", "member" : "scala.concurrent.stm.impl.RefFactory.newRef", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#newRef(v0:Short):scala.concurrent.stm.Ref[Short]", "kind" : "abstract def"}, {"label" : "newRef", "tail" : "(v0: Byte): Ref[Byte]", "member" : "scala.concurrent.stm.impl.RefFactory.newRef", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#newRef(v0:Byte):scala.concurrent.stm.Ref[Byte]", "kind" : "abstract def"}, {"label" : "newRef", "tail" : "(v0: Boolean): Ref[Boolean]", "member" : "scala.concurrent.stm.impl.RefFactory.newRef", "link" : "scala\/concurrent\/stm\/impl\/STMImpl.html#newRef(v0:Boolean):scala.concurrent.stm.Ref[Boolean]", "kind" : "abstract def"}], "shortDescription" : "STMImpl gathers all of the functionality required to plug an STM implementation into scala.concurrent.stm.", "object" : "scala\/concurrent\/stm\/impl\/STMImpl$.html", "members_object" : [{"label" : "select", "tail" : "(impl: STMImpl): Unit", "member" : "scala.concurrent.stm.impl.STMImpl.select", "link" : "scala\/concurrent\/stm\/impl\/STMImpl$.html#select(impl:scala.concurrent.stm.impl.STMImpl):Unit", "kind" : "def"}, {"label" : "select", "tail" : "(implClassName: String): Unit", "member" : "scala.concurrent.stm.impl.STMImpl.select", "link" : "scala\/concurrent\/stm\/impl\/STMImpl$.html#select(implClassName:String):Unit", "kind" : "def"}, {"label" : "trySelect", "tail" : "(implClassName: String): Boolean", "member" : "scala.concurrent.stm.impl.STMImpl.trySelect", "link" : "scala\/concurrent\/stm\/impl\/STMImpl$.html#trySelect(implClassName:String):Boolean", "kind" : "def"}, {"label" : "instance", "tail" : "(): STMImpl", "member" : "scala.concurrent.stm.impl.STMImpl.instance", "link" : "scala\/concurrent\/stm\/impl\/STMImpl$.html#instance:scala.concurrent.stm.impl.STMImpl", "kind" : "def"}, {"label" : "Factory", "tail" : "", "member" : "scala.concurrent.stm.impl.STMImpl.Factory", "link" : "scala\/concurrent\/stm\/impl\/STMImpl$.html#FactoryextendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/impl\/STMImpl$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/impl\/STMImpl$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/impl\/STMImpl$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/impl\/STMImpl$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/impl\/STMImpl$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/impl\/STMImpl$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/impl\/STMImpl$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/impl\/STMImpl$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/impl\/STMImpl$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/impl\/STMImpl$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/impl\/STMImpl$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/impl\/STMImpl$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/impl\/STMImpl$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/impl\/STMImpl$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/impl\/STMImpl$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/impl\/STMImpl$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/impl\/STMImpl$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/impl\/STMImpl$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/impl\/STMImpl$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scala\/concurrent\/stm\/impl\/STMImpl.html", "kind" : "object"}, {"name" : "scala.concurrent.stm.impl.TxnContext", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/impl\/TxnContext.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/impl\/TxnContext.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/impl\/TxnContext.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/impl\/TxnContext.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/impl\/TxnContext.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/impl\/TxnContext.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/impl\/TxnContext.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/impl\/TxnContext.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/impl\/TxnContext.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/impl\/TxnContext.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/impl\/TxnContext.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/impl\/TxnContext.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/impl\/TxnContext.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/impl\/TxnContext.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/impl\/TxnContext.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/impl\/TxnContext.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/impl\/TxnContext.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/impl\/TxnContext.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/impl\/TxnContext.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "dynCurrentOrNull", "tail" : "(): InTxn", "member" : "scala.concurrent.stm.impl.TxnContext.dynCurrentOrNull", "link" : "scala\/concurrent\/stm\/impl\/TxnContext.html#dynCurrentOrNull:scala.concurrent.stm.InTxn", "kind" : "abstract def"}, {"label" : "findCurrent", "tail" : "(mt: MaybeTxn): Option[InTxn]", "member" : "scala.concurrent.stm.impl.TxnContext.findCurrent", "link" : "scala\/concurrent\/stm\/impl\/TxnContext.html#findCurrent(implicitmt:scala.concurrent.stm.MaybeTxn):Option[scala.concurrent.stm.InTxn]", "kind" : "abstract def"}], "shortDescription" : "TxnContext captures the implementation-specific functionality of locating the InTxn dynamically bound to the current Thread.", "trait" : "scala\/concurrent\/stm\/impl\/TxnContext.html", "kind" : "trait"}], "scala.concurrent.stm.ccstm" : [{"name" : "scala.concurrent.stm.ccstm.CCSTM", "shortDescription" : "The reference STM implementation for scala.concurrent.stm.", "members_class" : [{"label" : "newCommitBarrier", "tail" : "(timeout: Long, unit: TimeUnit): CommitBarrier", "member" : "scala.concurrent.stm.ccstm.CCSTM.newCommitBarrier", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#newCommitBarrier(timeout:Long,unit:java.util.concurrent.TimeUnit):scala.concurrent.stm.CommitBarrier", "kind" : "def"}, {"label" : "dynCurrentOrNull", "tail" : "(): InTxn", "member" : "scala.concurrent.stm.ccstm.CCSTM.dynCurrentOrNull", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#dynCurrentOrNull:scala.concurrent.stm.InTxn", "kind" : "def"}, {"label" : "findCurrent", "tail" : "(mt: MaybeTxn): Option[InTxn]", "member" : "scala.concurrent.stm.ccstm.CCSTM.findCurrent", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#findCurrent(implicitmt:scala.concurrent.stm.MaybeTxn):Option[scala.concurrent.stm.InTxn]", "kind" : "def"}, {"member" : "scala.concurrent.stm.ccstm.CCSTM#<init>", "error" : "unsupported entity"}, {"label" : "newTSetBuilder", "tail" : "(): Builder[A, TSet[A]] { ... \/* 2 definitions in type refinement *\/ }", "member" : "scala.concurrent.stm.ccstm.CCSTMRefs.Factory.newTSetBuilder", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#newTSetBuilder[A]:scala.collection.mutable.Builder[A,scala.concurrent.stm.TSet[A]]{defroot:scala.concurrent.stm.skel.TxnHashTrie.SetBuildingNode[A];defroot_=(x$1:scala.concurrent.stm.skel.TxnHashTrie.SetBuildingNode[A]):Unit}", "kind" : "def"}, {"label" : "newTSet", "tail" : "(): TSet[A]", "member" : "scala.concurrent.stm.ccstm.CCSTMRefs.Factory.newTSet", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#newTSet[A]:scala.concurrent.stm.TSet[A]", "kind" : "def"}, {"label" : "newTMapBuilder", "tail" : "(): Builder[(A, B), TMap[A, B]] { ... \/* 2 definitions in type refinement *\/ }", "member" : "scala.concurrent.stm.ccstm.CCSTMRefs.Factory.newTMapBuilder", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#newTMapBuilder[A,B]:scala.collection.mutable.Builder[(A,B),scala.concurrent.stm.TMap[A,B]]{defroot:scala.concurrent.stm.skel.TxnHashTrie.BuildingNode[A,B];defroot_=(x$1:scala.concurrent.stm.skel.TxnHashTrie.BuildingNode[A,B]):Unit}", "kind" : "def"}, {"label" : "newTMap", "tail" : "(): TMap[A, B]", "member" : "scala.concurrent.stm.ccstm.CCSTMRefs.Factory.newTMap", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#newTMap[A,B]:scala.concurrent.stm.TMap[A,B]", "kind" : "def"}, {"label" : "newTArray", "tail" : "(xs: TraversableOnce[A])(arg0: ClassManifest[A]): TArray[A]", "member" : "scala.concurrent.stm.ccstm.CCSTMRefs.Factory.newTArray", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#newTArray[A](xs:TraversableOnce[A])(implicitevidence$3:ClassManifest[A]):scala.concurrent.stm.TArray[A]", "kind" : "def"}, {"label" : "newTArray", "tail" : "(length: Int)(arg0: ClassManifest[A]): TArray[A]", "member" : "scala.concurrent.stm.ccstm.CCSTMRefs.Factory.newTArray", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#newTArray[A](length:Int)(implicitevidence$2:ClassManifest[A]):scala.concurrent.stm.TArray[A]", "kind" : "def"}, {"label" : "newTxnLocal", "tail" : "(init: ⇒ A, initialValue: (InTxn) ⇒ A, beforeCommit: (InTxn) ⇒ Unit, whilePreparing: (InTxnEnd) ⇒ Unit, whileCommitting: (InTxnEnd) ⇒ Unit, afterCommit: (A) ⇒ Unit, afterRollback: (Status) ⇒ Unit, afterCompletion: (Status) ⇒ Unit): TxnLocal[A]", "member" : "scala.concurrent.stm.ccstm.CCSTMRefs.Factory.newTxnLocal", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#newTxnLocal[A](init:=>A,initialValue:scala.concurrent.stm.InTxn=>A,beforeCommit:scala.concurrent.stm.InTxn=>Unit,whilePreparing:scala.concurrent.stm.InTxnEnd=>Unit,whileCommitting:scala.concurrent.stm.InTxnEnd=>Unit,afterCommit:A=>Unit,afterRollback:scala.concurrent.stm.Txn.Status=>Unit,afterCompletion:scala.concurrent.stm.Txn.Status=>Unit):scala.concurrent.stm.TxnLocal[A]", "kind" : "def"}, {"label" : "newRef", "tail" : "(v0: T)(arg0: ClassManifest[T]): Ref[T]", "member" : "scala.concurrent.stm.ccstm.CCSTMRefs.Factory.newRef", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#newRef[T](v0:T)(implicitevidence$1:ClassManifest[T]):scala.concurrent.stm.Ref[T]", "kind" : "def"}, {"label" : "newRef", "tail" : "(v0: Unit): Ref[Unit]", "member" : "scala.concurrent.stm.ccstm.CCSTMRefs.Factory.newRef", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#newRef(v0:Unit):scala.concurrent.stm.Ref[Unit]", "kind" : "def"}, {"label" : "newRef", "tail" : "(v0: Double): Ref[Double]", "member" : "scala.concurrent.stm.ccstm.CCSTMRefs.Factory.newRef", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#newRef(v0:Double):scala.concurrent.stm.Ref[Double]", "kind" : "def"}, {"label" : "newRef", "tail" : "(v0: Long): Ref[Long]", "member" : "scala.concurrent.stm.ccstm.CCSTMRefs.Factory.newRef", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#newRef(v0:Long):scala.concurrent.stm.Ref[Long]", "kind" : "def"}, {"label" : "newRef", "tail" : "(v0: Float): Ref[Float]", "member" : "scala.concurrent.stm.ccstm.CCSTMRefs.Factory.newRef", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#newRef(v0:Float):scala.concurrent.stm.Ref[Float]", "kind" : "def"}, {"label" : "newRef", "tail" : "(v0: Int): Ref[Int]", "member" : "scala.concurrent.stm.ccstm.CCSTMRefs.Factory.newRef", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#newRef(v0:Int):scala.concurrent.stm.Ref[Int]", "kind" : "def"}, {"label" : "newRef", "tail" : "(v0: Char): Ref[Char]", "member" : "scala.concurrent.stm.ccstm.CCSTMRefs.Factory.newRef", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#newRef(v0:Char):scala.concurrent.stm.Ref[Char]", "kind" : "def"}, {"label" : "newRef", "tail" : "(v0: Short): Ref[Short]", "member" : "scala.concurrent.stm.ccstm.CCSTMRefs.Factory.newRef", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#newRef(v0:Short):scala.concurrent.stm.Ref[Short]", "kind" : "def"}, {"label" : "newRef", "tail" : "(v0: Byte): Ref[Byte]", "member" : "scala.concurrent.stm.ccstm.CCSTMRefs.Factory.newRef", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#newRef(v0:Byte):scala.concurrent.stm.Ref[Byte]", "kind" : "def"}, {"label" : "newRef", "tail" : "(v0: Boolean): Ref[Boolean]", "member" : "scala.concurrent.stm.ccstm.CCSTMRefs.Factory.newRef", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#newRef(v0:Boolean):scala.concurrent.stm.Ref[Boolean]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.concurrent.stm.ccstm.CCSTMExecutor.toString", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#toString():String", "kind" : "def"}, {"label" : "withPostDecisionFailureHandler", "tail" : "(handler: (Status, Throwable) ⇒ Unit): TxnExecutor", "member" : "scala.concurrent.stm.ccstm.CCSTMExecutor.withPostDecisionFailureHandler", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#withPostDecisionFailureHandler(handler:(scala.concurrent.stm.Txn.Status,Throwable)=>Unit):scala.concurrent.stm.TxnExecutor", "kind" : "def"}, {"label" : "withControlFlowRecognizer", "tail" : "(pf: PartialFunction[Throwable, Boolean]): TxnExecutor", "member" : "scala.concurrent.stm.ccstm.CCSTMExecutor.withControlFlowRecognizer", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#withControlFlowRecognizer(pf:PartialFunction[Throwable,Boolean]):scala.concurrent.stm.TxnExecutor", "kind" : "def"}, {"label" : "isControlFlow", "tail" : "(x: Throwable): Boolean", "member" : "scala.concurrent.stm.ccstm.CCSTMExecutor.isControlFlow", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#isControlFlow(x:Throwable):Boolean", "kind" : "def"}, {"label" : "withRetryTimeoutNanos", "tail" : "(timeout: Option[Long]): TxnExecutor", "member" : "scala.concurrent.stm.ccstm.CCSTMExecutor.withRetryTimeoutNanos", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#withRetryTimeoutNanos(timeout:Option[Long]):scala.concurrent.stm.TxnExecutor", "kind" : "def"}, {"label" : "compareAndSetIdentity", "tail" : "(a: Ref[A], a0: A, a1: A, b: Ref[B], b0: B, b1: B): Boolean", "member" : "scala.concurrent.stm.ccstm.CCSTMExecutor.compareAndSetIdentity", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#compareAndSetIdentity[A<:AnyRef,B<:AnyRef](a:scala.concurrent.stm.Ref[A],a0:A,a1:A,b:scala.concurrent.stm.Ref[B],b0:B,b1:B):Boolean", "kind" : "def"}, {"label" : "compareAndSet", "tail" : "(a: Ref[A], a0: A, a1: A, b: Ref[B], b0: B, b1: B): Boolean", "member" : "scala.concurrent.stm.ccstm.CCSTMExecutor.compareAndSet", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#compareAndSet[A,B](a:scala.concurrent.stm.Ref[A],a0:A,a1:A,b:scala.concurrent.stm.Ref[B],b0:B,b1:B):Boolean", "kind" : "def"}, {"label" : "pushAlternative", "tail" : "(mt: MaybeTxn, block: (InTxn) ⇒ Z): Boolean", "member" : "scala.concurrent.stm.ccstm.CCSTMExecutor.pushAlternative", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#pushAlternative[Z](mt:scala.concurrent.stm.MaybeTxn,block:scala.concurrent.stm.InTxn=>Z):Boolean", "kind" : "def"}, {"label" : "unrecorded", "tail" : "(block: (InTxn) ⇒ Z, outerFailure: (RollbackCause) ⇒ Z)(mt: MaybeTxn): Z", "member" : "scala.concurrent.stm.ccstm.CCSTMExecutor.unrecorded", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#unrecorded[Z](block:scala.concurrent.stm.InTxn=>Z,outerFailure:scala.concurrent.stm.Txn.RollbackCause=>Z)(implicitmt:scala.concurrent.stm.MaybeTxn):Z", "kind" : "def"}, {"label" : "oneOf", "tail" : "(blocks: (InTxn) ⇒ Z*)(mt: MaybeTxn): Z", "member" : "scala.concurrent.stm.ccstm.CCSTMExecutor.oneOf", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#oneOf[Z](blocks:scala.concurrent.stm.InTxn=>Z*)(implicitmt:scala.concurrent.stm.MaybeTxn):Z", "kind" : "def"}, {"label" : "apply", "tail" : "(block: (InTxn) ⇒ Z)(mt: MaybeTxn): Z", "member" : "scala.concurrent.stm.ccstm.CCSTMExecutor.apply", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#apply[Z](block:scala.concurrent.stm.InTxn=>Z)(implicitmt:scala.concurrent.stm.MaybeTxn):Z", "kind" : "def"}, {"label" : "postDecisionFailureHandler", "tail" : ": (Status, Throwable) ⇒ Unit", "member" : "scala.concurrent.stm.ccstm.CCSTMExecutor.postDecisionFailureHandler", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#postDecisionFailureHandler:(scala.concurrent.stm.Txn.Status,Throwable)=>Unit", "kind" : "val"}, {"label" : "controlFlowTest", "tail" : ": (Throwable) ⇒ Boolean", "member" : "scala.concurrent.stm.ccstm.CCSTMExecutor.controlFlowTest", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#controlFlowTest:Throwable=>Boolean", "kind" : "val"}, {"label" : "retryTimeoutNanos", "tail" : ": Option[Long]", "member" : "scala.concurrent.stm.ccstm.CCSTMExecutor.retryTimeoutNanos", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#retryTimeoutNanos:Option[Long]", "kind" : "val"}, {"label" : "withRetryTimeout", "tail" : "(timeout: Long, unit: TimeUnit): TxnExecutor", "member" : "scala.concurrent.stm.TxnExecutor.withRetryTimeout", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#withRetryTimeout(timeout:Long,unit:java.util.concurrent.TimeUnit):scala.concurrent.stm.TxnExecutor", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/concurrent\/stm\/ccstm\/CCSTM.html", "kind" : "class"}, {"name" : "scala.concurrent.stm.ccstm.WakeupManager", "shortDescription" : "", "object" : "scala\/concurrent\/stm\/ccstm\/WakeupManager$.html", "members_object" : [{"label" : "blocking", "tail" : "(body: ⇒ A): A", "member" : "scala.concurrent.stm.ccstm.WakeupManager.blocking", "link" : "scala\/concurrent\/stm\/ccstm\/WakeupManager$.html#blocking[A](body:=>A):A", "kind" : "def"}, {"label" : "blockingMethod", "tail" : ": Method", "member" : "scala.concurrent.stm.ccstm.WakeupManager.blockingMethod", "link" : "scala\/concurrent\/stm\/ccstm\/WakeupManager$.html#blockingMethod:java.lang.reflect.Method", "kind" : "val"}, {"label" : "Event", "tail" : "", "member" : "scala.concurrent.stm.ccstm.WakeupManager.Event", "link" : "scala\/concurrent\/stm\/ccstm\/WakeupManager$.html#EventextendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/ccstm\/WakeupManager$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/ccstm\/WakeupManager$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/ccstm\/WakeupManager$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/ccstm\/WakeupManager$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/ccstm\/WakeupManager$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/ccstm\/WakeupManager$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/ccstm\/WakeupManager$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/ccstm\/WakeupManager$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/ccstm\/WakeupManager$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/ccstm\/WakeupManager$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/ccstm\/WakeupManager$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/ccstm\/WakeupManager$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/ccstm\/WakeupManager$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/ccstm\/WakeupManager$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/ccstm\/WakeupManager$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/ccstm\/WakeupManager$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/ccstm\/WakeupManager$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/ccstm\/WakeupManager$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/ccstm\/WakeupManager$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "scala.concurrent" : [], "scala" : [], "scala.concurrent.stm.japi" : [{"name" : "scala.concurrent.stm.japi.STM", "shortDescription" : "Java-friendly API for ScalaSTM.", "object" : "scala\/concurrent\/stm\/japi\/STM$.html", "members_object" : [{"label" : "afterCompletion", "tail" : "(task: Runnable): Unit", "member" : "scala.concurrent.stm.japi.STM.afterCompletion", "link" : "scala\/concurrent\/stm\/japi\/STM$.html#afterCompletion(task:Runnable):Unit", "kind" : "def"}, {"label" : "afterRollback", "tail" : "(task: Runnable): Unit", "member" : "scala.concurrent.stm.japi.STM.afterRollback", "link" : "scala\/concurrent\/stm\/japi\/STM$.html#afterRollback(task:Runnable):Unit", "kind" : "def"}, {"label" : "afterCommit", "tail" : "(task: Runnable): Unit", "member" : "scala.concurrent.stm.japi.STM.afterCommit", "link" : "scala\/concurrent\/stm\/japi\/STM$.html#afterCommit(task:Runnable):Unit", "kind" : "def"}, {"label" : "increment", "tail" : "(ref: View[java.lang.Long], delta: Long): Unit", "member" : "scala.concurrent.stm.japi.STM.increment", "link" : "scala\/concurrent\/stm\/japi\/STM$.html#increment(ref:scala.concurrent.stm.Ref.View[Long],delta:Long):Unit", "kind" : "def"}, {"label" : "increment", "tail" : "(ref: View[Integer], delta: Int): Unit", "member" : "scala.concurrent.stm.japi.STM.increment", "link" : "scala\/concurrent\/stm\/japi\/STM$.html#increment(ref:scala.concurrent.stm.Ref.View[Integer],delta:Int):Unit", "kind" : "def"}, {"label" : "transformAndGet", "tail" : "(ref: View[A], f: Transformer[A]): A", "member" : "scala.concurrent.stm.japi.STM.transformAndGet", "link" : "scala\/concurrent\/stm\/japi\/STM$.html#transformAndGet[A<:AnyRef](ref:scala.concurrent.stm.Ref.View[A],f:scala.concurrent.stm.japi.STM.Transformer[A]):A", "kind" : "def"}, {"label" : "getAndTransform", "tail" : "(ref: View[A], f: Transformer[A]): A", "member" : "scala.concurrent.stm.japi.STM.getAndTransform", "link" : "scala\/concurrent\/stm\/japi\/STM$.html#getAndTransform[A<:AnyRef](ref:scala.concurrent.stm.Ref.View[A],f:scala.concurrent.stm.japi.STM.Transformer[A]):A", "kind" : "def"}, {"label" : "transform", "tail" : "(ref: View[A], f: Transformer[A]): Unit", "member" : "scala.concurrent.stm.japi.STM.transform", "link" : "scala\/concurrent\/stm\/japi\/STM$.html#transform[A<:AnyRef](ref:scala.concurrent.stm.Ref.View[A],f:scala.concurrent.stm.japi.STM.Transformer[A]):Unit", "kind" : "def"}, {"label" : "Transformer", "tail" : "", "member" : "scala.concurrent.stm.japi.STM.Transformer", "link" : "scala\/concurrent\/stm\/japi\/STM$.html#Transformer[A<:AnyRef]extendsAnyRef", "kind" : "abstract class"}, {"label" : "retryFor", "tail" : "(timeoutMillis: Long): Unit", "member" : "scala.concurrent.stm.japi.STM.retryFor", "link" : "scala\/concurrent\/stm\/japi\/STM$.html#retryFor(timeoutMillis:Long):Unit", "kind" : "def"}, {"label" : "retry", "tail" : "(): Unit", "member" : "scala.concurrent.stm.japi.STM.retry", "link" : "scala\/concurrent\/stm\/japi\/STM$.html#retry():Unit", "kind" : "def"}, {"label" : "atomic", "tail" : "(callable: Callable[A]): A", "member" : "scala.concurrent.stm.japi.STM.atomic", "link" : "scala\/concurrent\/stm\/japi\/STM$.html#atomic[A<:AnyRef](callable:java.util.concurrent.Callable[A]):A", "kind" : "def"}, {"label" : "atomic", "tail" : "(runnable: Runnable): Unit", "member" : "scala.concurrent.stm.japi.STM.atomic", "link" : "scala\/concurrent\/stm\/japi\/STM$.html#atomic(runnable:Runnable):Unit", "kind" : "def"}, {"label" : "newArrayAsList", "tail" : "(length: Int): java.util.List[A]", "member" : "scala.concurrent.stm.japi.STM.newArrayAsList", "link" : "scala\/concurrent\/stm\/japi\/STM$.html#newArrayAsList[A<:AnyRef](length:Int):java.util.List[A]", "kind" : "def"}, {"label" : "newTArray", "tail" : "(length: Int): View[A]", "member" : "scala.concurrent.stm.japi.STM.newTArray", "link" : "scala\/concurrent\/stm\/japi\/STM$.html#newTArray[A<:AnyRef](length:Int):scala.concurrent.stm.TArray.View[A]", "kind" : "def"}, {"label" : "newSet", "tail" : "(): Set[A]", "member" : "scala.concurrent.stm.japi.STM.newSet", "link" : "scala\/concurrent\/stm\/japi\/STM$.html#newSet[A]():java.util.Set[A]", "kind" : "def"}, {"label" : "newTSet", "tail" : "(): View[A]", "member" : "scala.concurrent.stm.japi.STM.newTSet", "link" : "scala\/concurrent\/stm\/japi\/STM$.html#newTSet[A]():scala.concurrent.stm.TSet.View[A]", "kind" : "def"}, {"label" : "newMap", "tail" : "(): Map[A, B]", "member" : "scala.concurrent.stm.japi.STM.newMap", "link" : "scala\/concurrent\/stm\/japi\/STM$.html#newMap[A,B]():java.util.Map[A,B]", "kind" : "def"}, {"label" : "newTMap", "tail" : "(): View[A, B]", "member" : "scala.concurrent.stm.japi.STM.newTMap", "link" : "scala\/concurrent\/stm\/japi\/STM$.html#newTMap[A,B]():scala.concurrent.stm.TMap.View[A,B]", "kind" : "def"}, {"label" : "newRef", "tail" : "(initialValue: A): View[A]", "member" : "scala.concurrent.stm.japi.STM.newRef", "link" : "scala\/concurrent\/stm\/japi\/STM$.html#newRef[A](initialValue:A):scala.concurrent.stm.Ref.View[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/concurrent\/stm\/japi\/STM$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/concurrent\/stm\/japi\/STM$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/concurrent\/stm\/japi\/STM$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/concurrent\/stm\/japi\/STM$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/concurrent\/stm\/japi\/STM$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/concurrent\/stm\/japi\/STM$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/concurrent\/stm\/japi\/STM$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/japi\/STM$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/japi\/STM$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/concurrent\/stm\/japi\/STM$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/concurrent\/stm\/japi\/STM$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/concurrent\/stm\/japi\/STM$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/concurrent\/stm\/japi\/STM$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/concurrent\/stm\/japi\/STM$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/concurrent\/stm\/japi\/STM$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/concurrent\/stm\/japi\/STM$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scala\/concurrent\/stm\/japi\/STM$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/concurrent\/stm\/japi\/STM$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/concurrent\/stm\/japi\/STM$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}]};